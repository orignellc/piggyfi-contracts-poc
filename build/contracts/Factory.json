{
  "contractName": "Factory",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "uniqueId",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "NewCustodian",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "accounts",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "custodianWalletLogic",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "escrowContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ochestrator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "uuid",
          "type": "string"
        }
      ],
      "name": "newCustodian",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uniqueId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NewCustodian\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"accounts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"custodianWalletLogic\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"escrowContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uuid\",\"type\":\"string\"}],\"name\":\"newCustodian\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ochestrator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Factotory responsible for deploying Escrow, Custodian Wallet Logic and managed CustodianWalletProxy for both Vendor and Customer. Note Controlled by deployer account.\",\"kind\":\"dev\",\"methods\":{\"newCustodian(string)\":{\"details\":\"create a new custodian wallet\",\"params\":{\"uuid\":\"is the unique id of the custodian wallet\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accounts(string)\":{\"notice\":\"mapping of account unique id to custodian wallet Note avoid passing predictable number such as incremental number. Use UUID string instead\"},\"custodianWalletLogic()\":{\"notice\":\"the address of the Custodian Wallet Logic\"},\"ochestrator()\":{\"notice\":\"EOA of deployer wallet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Factory.sol\":\"Factory\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"project:/contracts/CustodianWalletLogic.sol\":{\"keccak256\":\"0xc75a919600a3d80979ae876ef66a6e4f38ee37f7dfeec262024abdaca8dd0b61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b744a5af83a607c77576951b277fe90d90d46081e72d377a4f4a2ac07f2d2104\",\"dweb:/ipfs/QmTRF4hcDEKnsXFV8fuxPVAqCb6mz3jFjhU5dySmSgeUi5\"]},\"project:/contracts/CustodianWalletProxy.sol\":{\"keccak256\":\"0x1c1d8005a35ed3b7610ad9581be7111905e49f44bfd4c4c49d9ea22ef1add5c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6714f6954665ff972c8d9ea9ef70ca0c8a083ab7c64ff95f02b7d726644cd2ed\",\"dweb:/ipfs/QmUrtfkSJYjt3gNT2ENyFeWg6vhpfy7wEJkirrvwq9YAK2\"]},\"project:/contracts/Escrow.sol\":{\"keccak256\":\"0x5265318f465dc76ace4b18d9c2a65101ba5068fcd86560662036b432792d1c6e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ef8c84ea57a203ef17fa3c424cefe21be6039b1b6bca81ac74303fbaf2fd40a\",\"dweb:/ipfs/QmY9CQ62QCfWs8pD58VHQZFhv7QhH6txW5ca8GztE2tPmn\"]},\"project:/contracts/Factory.sol\":{\"keccak256\":\"0xdaa5074b8ef53d32632cccf66e7bf07ad8d7561ac35309b951f6b039276ac28d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47f4b57137b3f5aa23b1ce2a7f8652a7338ee50aa90cf1ac02c9796d44d7b991\",\"dweb:/ipfs/QmfHf9oiERNTqJ9GgAzyWTaWAH3b2VdD3D6xdV1uh1bCKP\"]},\"project:/contracts/Types.sol\":{\"keccak256\":\"0xce659e4d47dc4de63b14e325fe37f1813fb5143426951349601b0c222e2bfee6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6fd11c004a163851233fbb9c9344d0f4488ae785b42d1242d4640dc8ce38af9\",\"dweb:/ipfs/QmVmz8wA8NPeDCgiypZ84hWTXHZbMK9LVW6oDB8bNYSCbQ\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610074576000357c010000000000000000000000000000000000000000000000000000000090048063303904141461007957806333a676ed146100a95780639b7fbea6146100c75780639c811d43146100f8578063d226ae0814610116575b600080fd5b610093600480360381019061008e91906104df565b610134565b6040516100a091906105fe565b60405180910390f35b6100b161017d565b6040516100be91906105fe565b60405180910390f35b6100e160048036038101906100dc91906104df565b6101a3565b6040516100ef929190610672565b60405180910390f35b610100610418565b60405161010d91906105fe565b60405180910390f35b61011e61043c565b60405161012b91906105fe565b60405180910390f35b6003818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610236576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022d906106a2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660038460405161025e91906105e7565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102da906106c2565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163060405161033690610462565b61034293929190610619565b604051809103906000f08015801561035e573d6000803e3d6000fd5b5090508060038560405161037291906105e7565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f6eaee8201a623d4ec5397b1feccc8f1ee1dc236fc702e24142f618ada708859d856040516104049190610650565b60405180910390a283819250925050915091565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610976806108ab83390190565b600061048261047d84610707565b6106e2565b90508281526020810184848401111561049e5761049d610838565b5b6104a9848285610791565b509392505050565b600082601f8301126104c6576104c5610833565b5b81356104d684826020860161046f565b91505092915050565b6000602082840312156104f5576104f4610842565b5b600082013567ffffffffffffffff8111156105135761051261083d565b5b61051f848285016104b1565b91505092915050565b6105318161075f565b82525050565b600061054282610738565b61054c8185610743565b935061055c8185602086016107a0565b61056581610847565b840191505092915050565b600061057b82610738565b6105858185610754565b93506105958185602086016107a0565b80840191505092915050565b60006105ae601383610743565b91506105b982610858565b602082019050919050565b60006105d1601083610743565b91506105dc82610881565b602082019050919050565b60006105f38284610570565b915081905092915050565b60006020820190506106136000830184610528565b92915050565b600060608201905061062e6000830186610528565b61063b6020830185610528565b6106486040830184610528565b949350505050565b6000602082019050818103600083015261066a8184610537565b905092915050565b6000604082019050818103600083015261068c8185610537565b905061069b6020830184610528565b9392505050565b600060208201905081810360008301526106bb816105a1565b9050919050565b600060208201905081810360008301526106db816105c4565b9050919050565b60006106ec6106fd565b90506106f882826107d3565b919050565b6000604051905090565b600067ffffffffffffffff82111561072257610721610804565b5b61072b82610847565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600061076a82610771565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b838110156107be5780820151818401526020810190506107a3565b838111156107cd576000848401525b50505050565b6107dc82610847565b810181811067ffffffffffffffff821117156107fb576107fa610804565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f463a206f6e6c79206f63686573747261746f7200000000000000000000000000600082015250565b7f463a206163636f756e742065786973740000000000000000000000000000000060008201525056fe60c060405234801561001057600080fd5b5060405161097638038061097683398181016040528101906100329190610116565b8173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815250508273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506101b7565b600081519050610110816101a0565b92915050565b60008060006060848603121561012f5761012e61019b565b5b600061013d86828701610101565b935050602061014e86828701610101565b925050604061015f86828701610101565b9150509250925092565b60006101748261017b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6101a981610169565b81146101b457600080fd5b50565b6080516c01000000000000000000000000900460a0516c01000000000000000000000000900461076d61020960003960008181607401526102f2015260008181610104015261041a015261076d6000f3fe60806040526004361061006b576000357c0100000000000000000000000000000000000000000000000000000000900480631e7cea80146101bb5780639c811d43146101f8578063a85c38ef14610223578063c45a015514610269578063d7dfa0dd1461029457610072565b3661007257005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610100576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f7906105fd565b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000009050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610195576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018c9061061d565b60405180910390fd5b3660008037600080366000845af43d6000803e80600081146101b6573d6000f35b3d6000fd5b3480156101c757600080fd5b506101e260048036038101906101dd9190610466565b6102bf565b6040516101ef919061063d565b60405180910390f35b34801561020457600080fd5b5061020d6102f0565b60405161021a9190610546565b60405180910390f35b34801561022f57600080fd5b5061024a600480360381019061024591906104a6565b610314565b6040516102609a99989796959493929190610561565b60405180910390f35b34801561027557600080fd5b5061027e6103f2565b60405161028b9190610546565b60405180910390f35b3480156102a057600080fd5b506102a9610418565b6040516102b69190610546565b60405180910390f35b600160205281600052604060002081815481106102db57600080fd5b90600052602060002001600091509150505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061032457600080fd5b90600052602060002090600902016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154908060050154908060060160009054906101000a900460ff16908060060160019054906101000a900460ff1690806007015490806008015490508a565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008135905061044b81610709565b92915050565b60008135905061046081610720565b92915050565b6000806040838503121561047d5761047c6106b2565b5b600061048b8582860161043c565b925050602061049c85828601610451565b9150509250929050565b6000602082840312156104bc576104bb6106b2565b5b60006104ca84828501610451565b91505092915050565b6104dc81610669565b82525050565b60006104ef601183610658565b91506104fa826106b7565b602082019050919050565b6000610512601683610658565b915061051d826106e0565b602082019050919050565b6105318161069b565b82525050565b610540816106a5565b82525050565b600060208201905061055b60008301846104d3565b92915050565b600061014082019050610577600083018d6104d3565b610584602083018c6104d3565b610591604083018b6104d3565b61059e606083018a610528565b6105ab6080830189610528565b6105b860a0830188610528565b6105c560c0830187610537565b6105d260e0830186610537565b6105e0610100830185610528565b6105ee610120830184610528565b9b9a5050505050505050505050565b60006020820190508181036000830152610616816104e2565b9050919050565b6000602082019050818103600083015261063681610505565b9050919050565b60006020820190506106526000830184610528565b92915050565b600082825260208201905092915050565b60006106748261067b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600080fd5b7f57503a206465706c6f796572206f6e6c79000000000000000000000000000000600082015250565b7f4c6f67696320636f6e7472616374206e6f742073657400000000000000000000600082015250565b61071281610669565b811461071d57600080fd5b50565b6107298161069b565b811461073457600080fd5b5056fea26469706673582212202a859e5511aae64ed954ba89e63bd974f76d368e58922340aa034ed5a5e115a264736f6c63430008060033a264697066735822122026635660ff863e6ebf176616280d4c6a550a700dd39aa81a6527cb215108c0d164736f6c63430008060033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:590:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "72:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "89:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "112:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "94:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "94:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "82:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "82:37:11"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "60:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "67:3:11",
                "type": ""
              }
            ],
            "src": "7:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "229:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "239:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "251:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "262:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "247:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "247:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "239:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "319:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "332:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "343:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "328:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "328:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "275:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "275:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "201:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "213:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "224:4:11",
                "type": ""
              }
            ],
            "src": "131:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "404:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "414:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "443:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "425:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "425:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "414:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "386:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "396:7:11",
                "type": ""
              }
            ],
            "src": "359:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "506:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "516:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "531:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "538:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "527:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "527:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "516:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "488:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "498:7:11",
                "type": ""
              }
            ],
            "src": "461:126:11"
          }
        ]
      },
      "contents": "{\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8564:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "91:328:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "101:75:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "168:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "126:41:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "126:49:11"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "110:15:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "110:66:11"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "101:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "192:5:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "199:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "185:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "185:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "185:21:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "215:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "230:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "237:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "226:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "226:16:11"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "219:3:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "280:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                            "nodeType": "YulIdentifier",
                            "src": "282:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "282:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "282:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "261:3:11"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "257:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "257:16:11"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "275:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "254:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "254:25:11"
                  },
                  "nodeType": "YulIf",
                  "src": "251:2:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "396:3:11"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "401:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "406:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "372:23:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "372:41:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "372:41:11"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "64:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "69:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "77:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "85:5:11",
                "type": ""
              }
            ],
            "src": "7:412:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "501:278:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "550:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
                            "src": "552:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "552:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "552:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "529:6:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "537:4:11",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "525:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "525:17:11"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "544:3:11"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "521:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "521:27:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "514:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "514:35:11"
                  },
                  "nodeType": "YulIf",
                  "src": "511:2:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "642:34:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "669:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "656:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "656:20:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "646:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "685:88:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "746:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "754:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "742:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "742:17:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "761:6:11"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "769:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "694:47:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "694:79:11"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "685:5:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "479:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "487:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "495:5:11",
                "type": ""
              }
            ],
            "src": "439:340:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "861:433:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "907:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "909:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "909:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "909:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "882:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "891:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "878:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "878:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "903:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "874:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "874:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "871:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1000:287:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1015:45:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1046:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1057:1:11",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1042:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1042:17:11"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1029:12:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1029:31:11"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1019:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1107:83:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "1109:77:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1109:79:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1109:79:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1079:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1087:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1076:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1076:30:11"
                      },
                      "nodeType": "YulIf",
                      "src": "1073:2:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1204:73:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1249:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1260:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1245:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1245:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1269:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "1214:30:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1214:63:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1204:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "831:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "842:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "854:6:11",
                "type": ""
              }
            ],
            "src": "785:509:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1365:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1382:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1405:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1387:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1387:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1375:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1375:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1375:37:11"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1353:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1360:3:11",
                "type": ""
              }
            ],
            "src": "1300:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1516:272:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1526:53:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1573:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "1540:32:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1540:39:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1530:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1588:78:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1654:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1659:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1595:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1595:71:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1588:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1701:5:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1708:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1697:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1697:16:11"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1715:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1720:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1675:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1675:52:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1675:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1736:46:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1747:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1774:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "1752:21:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1752:29:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1743:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1743:39:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1736:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1497:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1504:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1512:3:11",
                "type": ""
              }
            ],
            "src": "1424:364:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1904:267:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1914:53:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1961:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "1928:32:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1928:39:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1918:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1976:96:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2060:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2065:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1983:76:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1983:89:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1976:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2107:5:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2114:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2103:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2103:16:11"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2121:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2126:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2081:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2081:52:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2081:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2142:23:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2153:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2158:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2149:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2149:16:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2142:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1885:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1892:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1900:3:11",
                "type": ""
              }
            ],
            "src": "1794:377:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2323:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2333:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2399:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2404:2:11",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2340:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2340:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2333:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2505:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_da4b10a4ffca3199c47725c4e6088f9d79a779d491df5dbd28432d1a7be917ea",
                      "nodeType": "YulIdentifier",
                      "src": "2416:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2416:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2416:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2518:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2529:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2534:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2525:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2525:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2518:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_da4b10a4ffca3199c47725c4e6088f9d79a779d491df5dbd28432d1a7be917ea_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2311:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2319:3:11",
                "type": ""
              }
            ],
            "src": "2177:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2695:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2705:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2771:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2776:2:11",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2712:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2712:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2705:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2877:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_e19068bfea4c2e080a2937192b9a8dd27925ba58f2f21944136c56617fdc737c",
                      "nodeType": "YulIdentifier",
                      "src": "2788:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2788:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2788:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2890:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2901:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2906:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2897:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2897:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2890:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e19068bfea4c2e080a2937192b9a8dd27925ba58f2f21944136c56617fdc737c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2683:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2691:3:11",
                "type": ""
              }
            ],
            "src": "2549:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3057:139:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3068:102:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3157:6:11"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3166:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3075:81:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3075:95:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3068:3:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3180:10:11",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "3187:3:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3180:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3036:3:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3042:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3053:3:11",
                "type": ""
              }
            ],
            "src": "2921:275:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3300:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3310:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3322:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3333:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3318:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3318:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3310:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3390:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3403:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3414:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3399:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3399:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3346:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3346:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3346:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3272:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3284:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3295:4:11",
                "type": ""
              }
            ],
            "src": "3202:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3584:288:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3594:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3606:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3617:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3602:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3602:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3594:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3674:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3687:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3698:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3683:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3683:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3630:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3630:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3630:71:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3755:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3768:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3779:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3764:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3764:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3711:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3711:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3711:72:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3837:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3850:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3861:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3846:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3846:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3793:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3793:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3793:72:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3540:9:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3552:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3560:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3568:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3579:4:11",
                "type": ""
              }
            ],
            "src": "3430:442:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3996:195:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4006:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4018:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4029:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4014:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4014:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4006:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4053:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4064:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4049:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4049:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4072:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4078:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4068:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4068:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4042:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4042:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4042:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4098:86:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4170:6:11"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4179:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4106:63:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4106:78:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4098:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3968:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3980:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3991:4:11",
                "type": ""
              }
            ],
            "src": "3878:313:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4343:277:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4353:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4365:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4376:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4361:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4361:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4353:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4400:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4411:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4396:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4396:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4419:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4425:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4415:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4415:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4389:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4389:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4389:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4445:86:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4517:6:11"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4526:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4453:63:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4453:78:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4445:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4585:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4598:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4609:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4594:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4594:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4541:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4541:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4541:72:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4307:9:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4319:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4327:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4338:4:11",
                "type": ""
              }
            ],
            "src": "4197:423:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4797:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4807:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4819:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4830:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4815:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4815:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4807:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4854:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4865:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4850:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4850:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4873:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4879:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4869:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4869:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4843:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4843:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4843:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4899:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5033:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_da4b10a4ffca3199c47725c4e6088f9d79a779d491df5dbd28432d1a7be917ea_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4907:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4907:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4899:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_da4b10a4ffca3199c47725c4e6088f9d79a779d491df5dbd28432d1a7be917ea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4777:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4792:4:11",
                "type": ""
              }
            ],
            "src": "4626:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5222:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5232:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5244:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5255:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5240:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5240:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5232:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5279:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5290:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5275:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5275:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5298:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5304:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5294:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5294:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5268:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5268:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5268:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5324:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5458:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e19068bfea4c2e080a2937192b9a8dd27925ba58f2f21944136c56617fdc737c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5332:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5332:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5324:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e19068bfea4c2e080a2937192b9a8dd27925ba58f2f21944136c56617fdc737c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5202:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5217:4:11",
                "type": ""
              }
            ],
            "src": "5051:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5517:88:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5527:30:11",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "5537:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5537:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "5527:6:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "5586:6:11"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "5594:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "5566:19:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5566:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5566:33:11"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "5501:4:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5510:6:11",
                "type": ""
              }
            ],
            "src": "5476:129:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5651:35:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5661:19:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5677:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5671:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5671:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "5661:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5644:6:11",
                "type": ""
              }
            ],
            "src": "5611:75:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5759:241:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5864:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "5866:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5866:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5866:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5836:6:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5844:18:11",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5833:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5833:30:11"
                  },
                  "nodeType": "YulIf",
                  "src": "5830:2:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5896:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5926:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "5904:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5904:29:11"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "5896:4:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5970:23:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "5982:4:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5988:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5978:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5978:15:11"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "5970:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5743:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "5754:4:11",
                "type": ""
              }
            ],
            "src": "5692:308:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6065:40:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6076:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6092:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6086:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6086:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "6076:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6048:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6058:6:11",
                "type": ""
              }
            ],
            "src": "6006:99:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6207:73:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6224:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6229:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6217:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6217:19:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6217:19:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6245:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6264:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6269:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6260:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6260:14:11"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "6245:11:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6179:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6184:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "6195:11:11",
                "type": ""
              }
            ],
            "src": "6111:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6400:34:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6410:18:11",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "6425:3:11"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "6410:11:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6372:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6377:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "6388:11:11",
                "type": ""
              }
            ],
            "src": "6286:148:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6485:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6495:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6524:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6506:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6506:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6495:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6467:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6477:7:11",
                "type": ""
              }
            ],
            "src": "6440:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6587:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6597:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6612:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6619:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6608:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6608:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6597:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6569:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6579:7:11",
                "type": ""
              }
            ],
            "src": "6542:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6725:103:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "6748:3:11"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "6753:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6758:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "6735:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6735:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6735:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "6806:3:11"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6811:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6802:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6802:16:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6820:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6795:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6795:27:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6795:27:11"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "6707:3:11",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "6712:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6717:6:11",
                "type": ""
              }
            ],
            "src": "6674:154:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6883:258:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6893:10:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6902:1:11",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6897:1:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6962:63:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6987:3:11"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "6992:1:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6983:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6983:11:11"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "7006:3:11"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "7011:1:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7002:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7002:11:11"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6996:5:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6996:18:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6976:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6976:39:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6976:39:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6923:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6926:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6920:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6920:13:11"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6934:19:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6936:15:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6945:1:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6948:2:11",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6941:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6941:10:11"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6936:1:11"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6916:3:11",
                    "statements": []
                  },
                  "src": "6912:113:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7059:76:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7109:3:11"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "7114:6:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7105:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7105:16:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7123:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7098:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7098:27:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7098:27:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7040:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7043:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7037:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7037:13:11"
                  },
                  "nodeType": "YulIf",
                  "src": "7034:2:11"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "6865:3:11",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "6870:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6875:6:11",
                "type": ""
              }
            ],
            "src": "6834:307:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7190:238:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7200:58:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "7222:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "7252:4:11"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "7230:21:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7230:27:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7218:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7218:40:11"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "7204:10:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7369:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "7371:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7371:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7371:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "7312:10:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7324:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7309:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7309:34:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "7348:10:11"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7360:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7345:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7345:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "7306:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7306:62:11"
                  },
                  "nodeType": "YulIf",
                  "src": "7303:2:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7407:2:11",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "7411:10:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7400:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7400:22:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7400:22:11"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7176:6:11",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "7184:4:11",
                "type": ""
              }
            ],
            "src": "7147:281:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7462:152:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7479:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7482:77:11",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7472:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7472:88:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7472:88:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7576:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7579:4:11",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7569:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7569:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7569:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7600:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7603:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7593:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7593:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7593:15:11"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "7434:180:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7709:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7726:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7729:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7719:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7719:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7719:12:11"
                }
              ]
            },
            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
            "nodeType": "YulFunctionDefinition",
            "src": "7620:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7832:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7849:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7852:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7842:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7842:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7842:12:11"
                }
              ]
            },
            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
            "nodeType": "YulFunctionDefinition",
            "src": "7743:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7955:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7972:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7975:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7965:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7965:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7965:12:11"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "7866:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8078:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8095:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8098:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8088:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8088:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8088:12:11"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "7989:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8160:54:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8170:38:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8188:5:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8195:2:11",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8184:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8184:14:11"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8204:2:11",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "8200:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8200:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8180:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8180:28:11"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "8170:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8143:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "8153:6:11",
                "type": ""
              }
            ],
            "src": "8112:102:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8326:63:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8348:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8356:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8344:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8344:14:11"
                      },
                      {
                        "hexValue": "463a206f6e6c79206f63686573747261746f72",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8360:21:11",
                        "type": "",
                        "value": "F: only ochestrator"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8337:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8337:45:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8337:45:11"
                }
              ]
            },
            "name": "store_literal_in_memory_da4b10a4ffca3199c47725c4e6088f9d79a779d491df5dbd28432d1a7be917ea",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8318:6:11",
                "type": ""
              }
            ],
            "src": "8220:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8501:60:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8523:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8531:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8519:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8519:14:11"
                      },
                      {
                        "hexValue": "463a206163636f756e74206578697374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8535:18:11",
                        "type": "",
                        "value": "F: account exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8512:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8512:42:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8512:42:11"
                }
              ]
            },
            "name": "store_literal_in_memory_e19068bfea4c2e080a2937192b9a8dd27925ba58f2f21944136c56617fdc737c",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8493:6:11",
                "type": ""
              }
            ],
            "src": "8395:166:11"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_da4b10a4ffca3199c47725c4e6088f9d79a779d491df5dbd28432d1a7be917ea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_da4b10a4ffca3199c47725c4e6088f9d79a779d491df5dbd28432d1a7be917ea(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e19068bfea4c2e080a2937192b9a8dd27925ba58f2f21944136c56617fdc737c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_e19068bfea4c2e080a2937192b9a8dd27925ba58f2f21944136c56617fdc737c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_da4b10a4ffca3199c47725c4e6088f9d79a779d491df5dbd28432d1a7be917ea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_da4b10a4ffca3199c47725c4e6088f9d79a779d491df5dbd28432d1a7be917ea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e19068bfea4c2e080a2937192b9a8dd27925ba58f2f21944136c56617fdc737c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e19068bfea4c2e080a2937192b9a8dd27925ba58f2f21944136c56617fdc737c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_da4b10a4ffca3199c47725c4e6088f9d79a779d491df5dbd28432d1a7be917ea(memPtr) {\n\n        mstore(add(memPtr, 0), \"F: only ochestrator\")\n\n    }\n\n    function store_literal_in_memory_e19068bfea4c2e080a2937192b9a8dd27925ba58f2f21944136c56617fdc737c(memPtr) {\n\n        mstore(add(memPtr, 0), \"F: account exist\")\n\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "347:1718:7:-:0;;;1380:174;;;;;;;;;;1414:10;1400:11;;:24;;;;;;;;;;;;;;;;;;1473:10;1462:22;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1430:21;;:55;;;;;;;;;;;;;;;;;;1522:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1491:20;;:58;;;;;;;;;;;;;;;;;;347:1718;;;;;;;;;;:::o;:::-;;;;;;;;:::o;7:118:11:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;72:53;;:::o;131:222::-;224:4;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;229:124;;;;:::o;359:96::-;396:7;425:24;443:5;425:24;:::i;:::-;414:35;;404:51;;;:::o;461:126::-;498:7;538:42;531:5;527:54;516:65;;506:81;;;:::o;347:1718:7:-;;;;;;;",
  "deployedSourceMap": "347:1718:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;948:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;708:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:395;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;621:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;748:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;948:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;708:35::-;;;;;;;;;;;;;:::o;1668:395::-;1753:13;1768:7;1329:11;;;;;;;;;;;1315:25;;:10;:25;;;1307:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;1819:3:::1;1793:30;;:8;1802:4;1793:14;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:30;;;1785:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;1851:14;1908:20;;;;;;;;;;;1930:11;::::0;::::1;;;;;;;;1951:4;1883:74;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1851:112;;1986:6;1969:8;1978:4;1969:14;;;;;;:::i;:::-;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;2023:6;2004:26;;;2017:4;2004:26;;;;;;:::i;:::-;;;;;;;;2045:4;2051:6;2037:21;;;;;1668:395:::0;;;:::o;621:26::-;;;;;;;;;;;;:::o;748:36::-;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:412:11:-;85:5;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:2;;;282:79;;:::i;:::-;251:2;372:41;406:6;401:3;396;372:41;:::i;:::-;91:328;;;;;;:::o;439:340::-;495:5;544:3;537:4;529:6;525:17;521:27;511:2;;552:79;;:::i;:::-;511:2;669:6;656:20;694:79;769:3;761:6;754:4;746:6;742:17;694:79;:::i;:::-;685:88;;501:278;;;;;:::o;785:509::-;854:6;903:2;891:9;882:7;878:23;874:32;871:2;;;909:79;;:::i;:::-;871:2;1057:1;1046:9;1042:17;1029:31;1087:18;1079:6;1076:30;1073:2;;;1109:79;;:::i;:::-;1073:2;1214:63;1269:7;1260:6;1249:9;1245:22;1214:63;:::i;:::-;1204:73;;1000:287;861:433;;;;:::o;1300:118::-;1387:24;1405:5;1387:24;:::i;:::-;1382:3;1375:37;1365:53;;:::o;1424:364::-;1512:3;1540:39;1573:5;1540:39;:::i;:::-;1595:71;1659:6;1654:3;1595:71;:::i;:::-;1588:78;;1675:52;1720:6;1715:3;1708:4;1701:5;1697:16;1675:52;:::i;:::-;1752:29;1774:6;1752:29;:::i;:::-;1747:3;1743:39;1736:46;;1516:272;;;;;:::o;1794:377::-;1900:3;1928:39;1961:5;1928:39;:::i;:::-;1983:89;2065:6;2060:3;1983:89;:::i;:::-;1976:96;;2081:52;2126:6;2121:3;2114:4;2107:5;2103:16;2081:52;:::i;:::-;2158:6;2153:3;2149:16;2142:23;;1904:267;;;;;:::o;2177:366::-;2319:3;2340:67;2404:2;2399:3;2340:67;:::i;:::-;2333:74;;2416:93;2505:3;2416:93;:::i;:::-;2534:2;2529:3;2525:12;2518:19;;2323:220;;;:::o;2549:366::-;2691:3;2712:67;2776:2;2771:3;2712:67;:::i;:::-;2705:74;;2788:93;2877:3;2788:93;:::i;:::-;2906:2;2901:3;2897:12;2890:19;;2695:220;;;:::o;2921:275::-;3053:3;3075:95;3166:3;3157:6;3075:95;:::i;:::-;3068:102;;3187:3;3180:10;;3057:139;;;;:::o;3202:222::-;3295:4;3333:2;3322:9;3318:18;3310:26;;3346:71;3414:1;3403:9;3399:17;3390:6;3346:71;:::i;:::-;3300:124;;;;:::o;3430:442::-;3579:4;3617:2;3606:9;3602:18;3594:26;;3630:71;3698:1;3687:9;3683:17;3674:6;3630:71;:::i;:::-;3711:72;3779:2;3768:9;3764:18;3755:6;3711:72;:::i;:::-;3793;3861:2;3850:9;3846:18;3837:6;3793:72;:::i;:::-;3584:288;;;;;;:::o;3878:313::-;3991:4;4029:2;4018:9;4014:18;4006:26;;4078:9;4072:4;4068:20;4064:1;4053:9;4049:17;4042:47;4106:78;4179:4;4170:6;4106:78;:::i;:::-;4098:86;;3996:195;;;;:::o;4197:423::-;4338:4;4376:2;4365:9;4361:18;4353:26;;4425:9;4419:4;4415:20;4411:1;4400:9;4396:17;4389:47;4453:78;4526:4;4517:6;4453:78;:::i;:::-;4445:86;;4541:72;4609:2;4598:9;4594:18;4585:6;4541:72;:::i;:::-;4343:277;;;;;:::o;4626:419::-;4792:4;4830:2;4819:9;4815:18;4807:26;;4879:9;4873:4;4869:20;4865:1;4854:9;4850:17;4843:47;4907:131;5033:4;4907:131;:::i;:::-;4899:139;;4797:248;;;:::o;5051:419::-;5217:4;5255:2;5244:9;5240:18;5232:26;;5304:9;5298:4;5294:20;5290:1;5279:9;5275:17;5268:47;5332:131;5458:4;5332:131;:::i;:::-;5324:139;;5222:248;;;:::o;5476:129::-;5510:6;5537:20;;:::i;:::-;5527:30;;5566:33;5594:4;5586:6;5566:33;:::i;:::-;5517:88;;;:::o;5611:75::-;5644:6;5677:2;5671:9;5661:19;;5651:35;:::o;5692:308::-;5754:4;5844:18;5836:6;5833:30;5830:2;;;5866:18;;:::i;:::-;5830:2;5904:29;5926:6;5904:29;:::i;:::-;5896:37;;5988:4;5982;5978:15;5970:23;;5759:241;;;:::o;6006:99::-;6058:6;6092:5;6086:12;6076:22;;6065:40;;;:::o;6111:169::-;6195:11;6229:6;6224:3;6217:19;6269:4;6264:3;6260:14;6245:29;;6207:73;;;;:::o;6286:148::-;6388:11;6425:3;6410:18;;6400:34;;;;:::o;6440:96::-;6477:7;6506:24;6524:5;6506:24;:::i;:::-;6495:35;;6485:51;;;:::o;6542:126::-;6579:7;6619:42;6612:5;6608:54;6597:65;;6587:81;;;:::o;6674:154::-;6758:6;6753:3;6748;6735:30;6820:1;6811:6;6806:3;6802:16;6795:27;6725:103;;;:::o;6834:307::-;6902:1;6912:113;6926:6;6923:1;6920:13;6912:113;;;7011:1;7006:3;7002:11;6996:18;6992:1;6987:3;6983:11;6976:39;6948:2;6945:1;6941:10;6936:15;;6912:113;;;7043:6;7040:1;7037:13;7034:2;;;7123:1;7114:6;7109:3;7105:16;7098:27;7034:2;6883:258;;;;:::o;7147:281::-;7230:27;7252:4;7230:27;:::i;:::-;7222:6;7218:40;7360:6;7348:10;7345:22;7324:18;7312:10;7309:34;7306:62;7303:2;;;7371:18;;:::i;:::-;7303:2;7411:10;7407:2;7400:22;7190:238;;;:::o;7434:180::-;7482:77;7479:1;7472:88;7579:4;7576:1;7569:15;7603:4;7600:1;7593:15;7620:117;7729:1;7726;7719:12;7743:117;7852:1;7849;7842:12;7866:117;7975:1;7972;7965:12;7989:117;8098:1;8095;8088:12;8112:102;8153:6;8204:2;8200:7;8195:2;8188:5;8184:14;8180:28;8170:38;;8160:54;;;:::o;8220:169::-;8360:21;8356:1;8348:6;8344:14;8337:45;8326:63;:::o;8395:166::-;8535:18;8531:1;8523:6;8519:14;8512:42;8501:60;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./CustodianWalletLogic.sol\";\nimport \"./CustodianWalletProxy.sol\";\nimport \"./Escrow.sol\";\n\n/**\n * @dev Factotory responsible for deploying Escrow, Custodian Wallet Logic and\n * managed CustodianWalletProxy for both Vendor and Customer.\n *\n * Note Controlled by deployer account.\n */\ncontract Factory {\n  ////////////////////////////////////////\n  //                                    //\n  //         STATE VARIABLES            //\n  //                                    //\n  ////////////////////////////////////////\n\n  /// @notice EOA of deployer wallet\n  address public ochestrator;\n\n  /// @notice the address of the Custodian Wallet Logic\n  address public custodianWalletLogic;\n\n  address public escrowContractAddress;\n\n  /// @notice mapping of account unique id to custodian wallet\n  /// Note avoid passing predictable number such as incremental number. Use UUID string instead\n  mapping(string => address) public accounts;\n\n  event NewCustodian(string uniqueId, address indexed account);\n\n  ////////////////////////////////////////\n  //                                    //\n  //              FUNCTIONS             //\n  //                                    //\n  ////////////////////////////////////////\n  modifier onlyOchesrator() {\n    require(msg.sender == ochestrator, \"F: only ochestrator\");\n    _;\n  }\n\n  constructor() {\n    ochestrator = msg.sender;\n    escrowContractAddress = address(new Escrow(msg.sender));\n    custodianWalletLogic = address(new CustodianWalletLogic());\n  }\n\n  /**\n   * @dev create a new custodian wallet\n   * @param uuid is the unique id of the custodian wallet\n   */\n  function newCustodian(string memory uuid)\n    public\n    onlyOchesrator\n    returns (string memory, address)\n  {\n    require(accounts[uuid] == address(0x0), \"F: account exist\");\n\n    address wallet = address(\n      new CustodianWalletProxy(custodianWalletLogic, ochestrator, address(this))\n    );\n    accounts[uuid] = wallet;\n\n    emit NewCustodian(uuid, wallet);\n\n    return (uuid, wallet);\n  }\n}\n",
  "sourcePath": "/Users/drewhyte/Sites/SOLIDITY/piggyfi-contract-avax-poc/contracts/Factory.sol",
  "ast": {
    "absolutePath": "project:/contracts/Factory.sol",
    "exportedSymbols": {
      "CustodianWalletLogic": [
        1102
      ],
      "CustodianWalletProxy": [
        1174
      ],
      "Escrow": [
        1491
      ],
      "Factory": [
        1616
      ],
      "IERC20": [
        663
      ],
      "Types": [
        1737
      ]
    },
    "id": 1617,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1493,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "absolutePath": "project:/contracts/CustodianWalletLogic.sol",
        "file": "./CustodianWalletLogic.sol",
        "id": 1494,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1617,
        "sourceUnit": 1103,
        "src": "57:36:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/CustodianWalletProxy.sol",
        "file": "./CustodianWalletProxy.sol",
        "id": 1495,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1617,
        "sourceUnit": 1175,
        "src": "94:36:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Escrow.sol",
        "file": "./Escrow.sol",
        "id": 1496,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1617,
        "sourceUnit": 1492,
        "src": "131:22:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          1102,
          1174,
          1491
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1497,
          "nodeType": "StructuredDocumentation",
          "src": "155:191:7",
          "text": " @dev Factotory responsible for deploying Escrow, Custodian Wallet Logic and\n managed CustodianWalletProxy for both Vendor and Customer.\n Note Controlled by deployer account."
        },
        "fullyImplemented": true,
        "id": 1616,
        "linearizedBaseContracts": [
          1616
        ],
        "name": "Factory",
        "nameLocation": "356:7:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 1498,
              "nodeType": "StructuredDocumentation",
              "src": "584:34:7",
              "text": "@notice EOA of deployer wallet"
            },
            "functionSelector": "9c811d43",
            "id": 1500,
            "mutability": "mutable",
            "name": "ochestrator",
            "nameLocation": "636:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 1616,
            "src": "621:26:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1499,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "621:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1501,
              "nodeType": "StructuredDocumentation",
              "src": "652:53:7",
              "text": "@notice the address of the Custodian Wallet Logic"
            },
            "functionSelector": "33a676ed",
            "id": 1503,
            "mutability": "mutable",
            "name": "custodianWalletLogic",
            "nameLocation": "723:20:7",
            "nodeType": "VariableDeclaration",
            "scope": 1616,
            "src": "708:35:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1502,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "708:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d226ae08",
            "id": 1505,
            "mutability": "mutable",
            "name": "escrowContractAddress",
            "nameLocation": "763:21:7",
            "nodeType": "VariableDeclaration",
            "scope": 1616,
            "src": "748:36:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1504,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "748:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1506,
              "nodeType": "StructuredDocumentation",
              "src": "789:156:7",
              "text": "@notice mapping of account unique id to custodian wallet\n Note avoid passing predictable number such as incremental number. Use UUID string instead"
            },
            "functionSelector": "30390414",
            "id": 1510,
            "mutability": "mutable",
            "name": "accounts",
            "nameLocation": "982:8:7",
            "nodeType": "VariableDeclaration",
            "scope": 1616,
            "src": "948:42:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 1509,
              "keyType": {
                "id": 1507,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "956:6:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "948:26:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 1508,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "966:7:7",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 1516,
            "name": "NewCustodian",
            "nameLocation": "1001:12:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1512,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "uniqueId",
                  "nameLocation": "1021:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1516,
                  "src": "1014:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1511,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1014:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1514,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1047:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1516,
                  "src": "1031:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1031:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1013:42:7"
            },
            "src": "995:61:7"
          },
          {
            "body": {
              "id": 1527,
              "nodeType": "Block",
              "src": "1301:75:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1519,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1315:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1315:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1521,
                          "name": "ochestrator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1500,
                          "src": "1329:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1315:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "463a206f6e6c79206f63686573747261746f72",
                        "id": 1523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1342:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da4b10a4ffca3199c47725c4e6088f9d79a779d491df5dbd28432d1a7be917ea",
                          "typeString": "literal_string \"F: only ochestrator\""
                        },
                        "value": "F: only ochestrator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da4b10a4ffca3199c47725c4e6088f9d79a779d491df5dbd28432d1a7be917ea",
                          "typeString": "literal_string \"F: only ochestrator\""
                        }
                      ],
                      "id": 1518,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1307:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1307:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1525,
                  "nodeType": "ExpressionStatement",
                  "src": "1307:57:7"
                },
                {
                  "id": 1526,
                  "nodeType": "PlaceholderStatement",
                  "src": "1370:1:7"
                }
              ]
            },
            "id": 1528,
            "name": "onlyOchesrator",
            "nameLocation": "1284:14:7",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1517,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1298:2:7"
            },
            "src": "1275:101:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1558,
              "nodeType": "Block",
              "src": "1394:160:7",
              "statements": [
                {
                  "expression": {
                    "id": 1534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1531,
                      "name": "ochestrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1500,
                      "src": "1400:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1532,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1414:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1414:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1400:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1535,
                  "nodeType": "ExpressionStatement",
                  "src": "1400:24:7"
                },
                {
                  "expression": {
                    "id": 1546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1536,
                      "name": "escrowContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1505,
                      "src": "1430:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1542,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1473:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1473:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1462:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Escrow_$1491_$",
                              "typeString": "function (address) returns (contract Escrow)"
                            },
                            "typeName": {
                              "id": 1540,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1539,
                                "name": "Escrow",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1491,
                                "src": "1466:6:7"
                              },
                              "referencedDeclaration": 1491,
                              "src": "1466:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Escrow_$1491",
                                "typeString": "contract Escrow"
                              }
                            }
                          },
                          "id": 1544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1462:22:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Escrow_$1491",
                            "typeString": "contract Escrow"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Escrow_$1491",
                            "typeString": "contract Escrow"
                          }
                        ],
                        "id": 1538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1454:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1537,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1454:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1454:31:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1430:55:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1547,
                  "nodeType": "ExpressionStatement",
                  "src": "1430:55:7"
                },
                {
                  "expression": {
                    "id": 1556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1548,
                      "name": "custodianWalletLogic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1503,
                      "src": "1491:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1522:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_CustodianWalletLogic_$1102_$",
                              "typeString": "function () returns (contract CustodianWalletLogic)"
                            },
                            "typeName": {
                              "id": 1552,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1551,
                                "name": "CustodianWalletLogic",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1102,
                                "src": "1526:20:7"
                              },
                              "referencedDeclaration": 1102,
                              "src": "1526:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CustodianWalletLogic_$1102",
                                "typeString": "contract CustodianWalletLogic"
                              }
                            }
                          },
                          "id": 1554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1522:26:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CustodianWalletLogic_$1102",
                            "typeString": "contract CustodianWalletLogic"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CustodianWalletLogic_$1102",
                            "typeString": "contract CustodianWalletLogic"
                          }
                        ],
                        "id": 1550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1514:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1549,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1514:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1514:35:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1491:58:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1557,
                  "nodeType": "ExpressionStatement",
                  "src": "1491:58:7"
                }
              ]
            },
            "id": 1559,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1391:2:7"
            },
            "returnParameters": {
              "id": 1530,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1394:0:7"
            },
            "scope": 1616,
            "src": "1380:174:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1614,
              "nodeType": "Block",
              "src": "1779:284:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1572,
                            "name": "accounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1510,
                            "src": "1793:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 1574,
                          "indexExpression": {
                            "id": 1573,
                            "name": "uuid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1562,
                            "src": "1802:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1793:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 1577,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1819:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1811:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1575,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1811:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1811:12:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1793:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "463a206163636f756e74206578697374",
                        "id": 1580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1825:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e19068bfea4c2e080a2937192b9a8dd27925ba58f2f21944136c56617fdc737c",
                          "typeString": "literal_string \"F: account exist\""
                        },
                        "value": "F: account exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e19068bfea4c2e080a2937192b9a8dd27925ba58f2f21944136c56617fdc737c",
                          "typeString": "literal_string \"F: account exist\""
                        }
                      ],
                      "id": 1571,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1785:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1785:59:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1582,
                  "nodeType": "ExpressionStatement",
                  "src": "1785:59:7"
                },
                {
                  "assignments": [
                    1584
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1584,
                      "mutability": "mutable",
                      "name": "wallet",
                      "nameLocation": "1859:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1614,
                      "src": "1851:14:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1583,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1851:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1598,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1590,
                            "name": "custodianWalletLogic",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1503,
                            "src": "1908:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1591,
                            "name": "ochestrator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1500,
                            "src": "1930:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 1594,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1951:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Factory_$1616",
                                  "typeString": "contract Factory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Factory_$1616",
                                  "typeString": "contract Factory"
                                }
                              ],
                              "id": 1593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1943:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1592,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1943:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1595,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1943:13:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1883:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_contract$_CustodianWalletProxy_$1174_$",
                            "typeString": "function (address,address,address) returns (contract CustodianWalletProxy)"
                          },
                          "typeName": {
                            "id": 1588,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1587,
                              "name": "CustodianWalletProxy",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1174,
                              "src": "1887:20:7"
                            },
                            "referencedDeclaration": 1174,
                            "src": "1887:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CustodianWalletProxy_$1174",
                              "typeString": "contract CustodianWalletProxy"
                            }
                          }
                        },
                        "id": 1596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1883:74:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CustodianWalletProxy_$1174",
                          "typeString": "contract CustodianWalletProxy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CustodianWalletProxy_$1174",
                          "typeString": "contract CustodianWalletProxy"
                        }
                      ],
                      "id": 1586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1868:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1585,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1868:7:7",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1868:95:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1851:112:7"
                },
                {
                  "expression": {
                    "id": 1603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1599,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1510,
                        "src": "1969:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 1601,
                      "indexExpression": {
                        "id": 1600,
                        "name": "uuid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1562,
                        "src": "1978:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1969:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1602,
                      "name": "wallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1584,
                      "src": "1986:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1969:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1604,
                  "nodeType": "ExpressionStatement",
                  "src": "1969:23:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1606,
                        "name": "uuid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1562,
                        "src": "2017:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 1607,
                        "name": "wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1584,
                        "src": "2023:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1605,
                      "name": "NewCustodian",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1516,
                      "src": "2004:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 1608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2004:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1609,
                  "nodeType": "EmitStatement",
                  "src": "1999:31:7"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1610,
                        "name": "uuid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1562,
                        "src": "2045:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 1611,
                        "name": "wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1584,
                        "src": "2051:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 1612,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2044:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_address_$",
                      "typeString": "tuple(string memory,address)"
                    }
                  },
                  "functionReturnParameters": 1570,
                  "id": 1613,
                  "nodeType": "Return",
                  "src": "2037:21:7"
                }
              ]
            },
            "documentation": {
              "id": 1560,
              "nodeType": "StructuredDocumentation",
              "src": "1558:107:7",
              "text": " @dev create a new custodian wallet\n @param uuid is the unique id of the custodian wallet"
            },
            "functionSelector": "9b7fbea6",
            "id": 1615,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1565,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1564,
                  "name": "onlyOchesrator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1528,
                  "src": "1725:14:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1725:14:7"
              }
            ],
            "name": "newCustodian",
            "nameLocation": "1677:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1562,
                  "mutability": "mutable",
                  "name": "uuid",
                  "nameLocation": "1704:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1615,
                  "src": "1690:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1561,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1690:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1689:20:7"
            },
            "returnParameters": {
              "id": 1570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1567,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1615,
                  "src": "1753:13:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1566,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1753:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1569,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1615,
                  "src": "1768:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1768:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1752:24:7"
            },
            "scope": 1616,
            "src": "1668:395:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1617,
        "src": "347:1718:7",
        "usedErrors": []
      }
    ],
    "src": "32:2034:7"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Factory.sol",
    "exportedSymbols": {
      "CustodianWalletLogic": [
        1102
      ],
      "CustodianWalletProxy": [
        1174
      ],
      "Escrow": [
        1491
      ],
      "Factory": [
        1616
      ],
      "IERC20": [
        663
      ],
      "Types": [
        1737
      ]
    },
    "id": 1617,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1493,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "absolutePath": "project:/contracts/CustodianWalletLogic.sol",
        "file": "./CustodianWalletLogic.sol",
        "id": 1494,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1617,
        "sourceUnit": 1103,
        "src": "57:36:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/CustodianWalletProxy.sol",
        "file": "./CustodianWalletProxy.sol",
        "id": 1495,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1617,
        "sourceUnit": 1175,
        "src": "94:36:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Escrow.sol",
        "file": "./Escrow.sol",
        "id": 1496,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1617,
        "sourceUnit": 1492,
        "src": "131:22:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          1102,
          1174,
          1491
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1497,
          "nodeType": "StructuredDocumentation",
          "src": "155:191:7",
          "text": " @dev Factotory responsible for deploying Escrow, Custodian Wallet Logic and\n managed CustodianWalletProxy for both Vendor and Customer.\n Note Controlled by deployer account."
        },
        "fullyImplemented": true,
        "id": 1616,
        "linearizedBaseContracts": [
          1616
        ],
        "name": "Factory",
        "nameLocation": "356:7:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 1498,
              "nodeType": "StructuredDocumentation",
              "src": "584:34:7",
              "text": "@notice EOA of deployer wallet"
            },
            "functionSelector": "9c811d43",
            "id": 1500,
            "mutability": "mutable",
            "name": "ochestrator",
            "nameLocation": "636:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 1616,
            "src": "621:26:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1499,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "621:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1501,
              "nodeType": "StructuredDocumentation",
              "src": "652:53:7",
              "text": "@notice the address of the Custodian Wallet Logic"
            },
            "functionSelector": "33a676ed",
            "id": 1503,
            "mutability": "mutable",
            "name": "custodianWalletLogic",
            "nameLocation": "723:20:7",
            "nodeType": "VariableDeclaration",
            "scope": 1616,
            "src": "708:35:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1502,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "708:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d226ae08",
            "id": 1505,
            "mutability": "mutable",
            "name": "escrowContractAddress",
            "nameLocation": "763:21:7",
            "nodeType": "VariableDeclaration",
            "scope": 1616,
            "src": "748:36:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1504,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "748:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1506,
              "nodeType": "StructuredDocumentation",
              "src": "789:156:7",
              "text": "@notice mapping of account unique id to custodian wallet\n Note avoid passing predictable number such as incremental number. Use UUID string instead"
            },
            "functionSelector": "30390414",
            "id": 1510,
            "mutability": "mutable",
            "name": "accounts",
            "nameLocation": "982:8:7",
            "nodeType": "VariableDeclaration",
            "scope": 1616,
            "src": "948:42:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 1509,
              "keyType": {
                "id": 1507,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "956:6:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "948:26:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 1508,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "966:7:7",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 1516,
            "name": "NewCustodian",
            "nameLocation": "1001:12:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1512,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "uniqueId",
                  "nameLocation": "1021:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1516,
                  "src": "1014:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1511,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1014:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1514,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1047:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1516,
                  "src": "1031:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1031:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1013:42:7"
            },
            "src": "995:61:7"
          },
          {
            "body": {
              "id": 1527,
              "nodeType": "Block",
              "src": "1301:75:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1519,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1315:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1315:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1521,
                          "name": "ochestrator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1500,
                          "src": "1329:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1315:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "463a206f6e6c79206f63686573747261746f72",
                        "id": 1523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1342:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da4b10a4ffca3199c47725c4e6088f9d79a779d491df5dbd28432d1a7be917ea",
                          "typeString": "literal_string \"F: only ochestrator\""
                        },
                        "value": "F: only ochestrator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da4b10a4ffca3199c47725c4e6088f9d79a779d491df5dbd28432d1a7be917ea",
                          "typeString": "literal_string \"F: only ochestrator\""
                        }
                      ],
                      "id": 1518,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1307:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1307:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1525,
                  "nodeType": "ExpressionStatement",
                  "src": "1307:57:7"
                },
                {
                  "id": 1526,
                  "nodeType": "PlaceholderStatement",
                  "src": "1370:1:7"
                }
              ]
            },
            "id": 1528,
            "name": "onlyOchesrator",
            "nameLocation": "1284:14:7",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1517,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1298:2:7"
            },
            "src": "1275:101:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1558,
              "nodeType": "Block",
              "src": "1394:160:7",
              "statements": [
                {
                  "expression": {
                    "id": 1534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1531,
                      "name": "ochestrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1500,
                      "src": "1400:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1532,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1414:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1414:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1400:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1535,
                  "nodeType": "ExpressionStatement",
                  "src": "1400:24:7"
                },
                {
                  "expression": {
                    "id": 1546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1536,
                      "name": "escrowContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1505,
                      "src": "1430:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1542,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1473:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1473:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1462:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Escrow_$1491_$",
                              "typeString": "function (address) returns (contract Escrow)"
                            },
                            "typeName": {
                              "id": 1540,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1539,
                                "name": "Escrow",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1491,
                                "src": "1466:6:7"
                              },
                              "referencedDeclaration": 1491,
                              "src": "1466:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Escrow_$1491",
                                "typeString": "contract Escrow"
                              }
                            }
                          },
                          "id": 1544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1462:22:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Escrow_$1491",
                            "typeString": "contract Escrow"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Escrow_$1491",
                            "typeString": "contract Escrow"
                          }
                        ],
                        "id": 1538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1454:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1537,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1454:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1454:31:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1430:55:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1547,
                  "nodeType": "ExpressionStatement",
                  "src": "1430:55:7"
                },
                {
                  "expression": {
                    "id": 1556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1548,
                      "name": "custodianWalletLogic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1503,
                      "src": "1491:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1522:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_CustodianWalletLogic_$1102_$",
                              "typeString": "function () returns (contract CustodianWalletLogic)"
                            },
                            "typeName": {
                              "id": 1552,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1551,
                                "name": "CustodianWalletLogic",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1102,
                                "src": "1526:20:7"
                              },
                              "referencedDeclaration": 1102,
                              "src": "1526:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CustodianWalletLogic_$1102",
                                "typeString": "contract CustodianWalletLogic"
                              }
                            }
                          },
                          "id": 1554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1522:26:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CustodianWalletLogic_$1102",
                            "typeString": "contract CustodianWalletLogic"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CustodianWalletLogic_$1102",
                            "typeString": "contract CustodianWalletLogic"
                          }
                        ],
                        "id": 1550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1514:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1549,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1514:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1514:35:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1491:58:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1557,
                  "nodeType": "ExpressionStatement",
                  "src": "1491:58:7"
                }
              ]
            },
            "id": 1559,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1391:2:7"
            },
            "returnParameters": {
              "id": 1530,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1394:0:7"
            },
            "scope": 1616,
            "src": "1380:174:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1614,
              "nodeType": "Block",
              "src": "1779:284:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1572,
                            "name": "accounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1510,
                            "src": "1793:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 1574,
                          "indexExpression": {
                            "id": 1573,
                            "name": "uuid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1562,
                            "src": "1802:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1793:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 1577,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1819:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1811:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1575,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1811:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1811:12:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1793:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "463a206163636f756e74206578697374",
                        "id": 1580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1825:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e19068bfea4c2e080a2937192b9a8dd27925ba58f2f21944136c56617fdc737c",
                          "typeString": "literal_string \"F: account exist\""
                        },
                        "value": "F: account exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e19068bfea4c2e080a2937192b9a8dd27925ba58f2f21944136c56617fdc737c",
                          "typeString": "literal_string \"F: account exist\""
                        }
                      ],
                      "id": 1571,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1785:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1785:59:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1582,
                  "nodeType": "ExpressionStatement",
                  "src": "1785:59:7"
                },
                {
                  "assignments": [
                    1584
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1584,
                      "mutability": "mutable",
                      "name": "wallet",
                      "nameLocation": "1859:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1614,
                      "src": "1851:14:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1583,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1851:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1598,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1590,
                            "name": "custodianWalletLogic",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1503,
                            "src": "1908:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1591,
                            "name": "ochestrator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1500,
                            "src": "1930:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 1594,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1951:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Factory_$1616",
                                  "typeString": "contract Factory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Factory_$1616",
                                  "typeString": "contract Factory"
                                }
                              ],
                              "id": 1593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1943:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1592,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1943:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1595,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1943:13:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1883:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_contract$_CustodianWalletProxy_$1174_$",
                            "typeString": "function (address,address,address) returns (contract CustodianWalletProxy)"
                          },
                          "typeName": {
                            "id": 1588,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1587,
                              "name": "CustodianWalletProxy",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1174,
                              "src": "1887:20:7"
                            },
                            "referencedDeclaration": 1174,
                            "src": "1887:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CustodianWalletProxy_$1174",
                              "typeString": "contract CustodianWalletProxy"
                            }
                          }
                        },
                        "id": 1596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1883:74:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CustodianWalletProxy_$1174",
                          "typeString": "contract CustodianWalletProxy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CustodianWalletProxy_$1174",
                          "typeString": "contract CustodianWalletProxy"
                        }
                      ],
                      "id": 1586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1868:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1585,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1868:7:7",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1868:95:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1851:112:7"
                },
                {
                  "expression": {
                    "id": 1603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1599,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1510,
                        "src": "1969:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 1601,
                      "indexExpression": {
                        "id": 1600,
                        "name": "uuid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1562,
                        "src": "1978:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1969:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1602,
                      "name": "wallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1584,
                      "src": "1986:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1969:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1604,
                  "nodeType": "ExpressionStatement",
                  "src": "1969:23:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1606,
                        "name": "uuid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1562,
                        "src": "2017:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 1607,
                        "name": "wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1584,
                        "src": "2023:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1605,
                      "name": "NewCustodian",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1516,
                      "src": "2004:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 1608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2004:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1609,
                  "nodeType": "EmitStatement",
                  "src": "1999:31:7"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1610,
                        "name": "uuid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1562,
                        "src": "2045:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 1611,
                        "name": "wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1584,
                        "src": "2051:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 1612,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2044:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_address_$",
                      "typeString": "tuple(string memory,address)"
                    }
                  },
                  "functionReturnParameters": 1570,
                  "id": 1613,
                  "nodeType": "Return",
                  "src": "2037:21:7"
                }
              ]
            },
            "documentation": {
              "id": 1560,
              "nodeType": "StructuredDocumentation",
              "src": "1558:107:7",
              "text": " @dev create a new custodian wallet\n @param uuid is the unique id of the custodian wallet"
            },
            "functionSelector": "9b7fbea6",
            "id": 1615,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1565,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1564,
                  "name": "onlyOchesrator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1528,
                  "src": "1725:14:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1725:14:7"
              }
            ],
            "name": "newCustodian",
            "nameLocation": "1677:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1562,
                  "mutability": "mutable",
                  "name": "uuid",
                  "nameLocation": "1704:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1615,
                  "src": "1690:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1561,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1690:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1689:20:7"
            },
            "returnParameters": {
              "id": 1570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1567,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1615,
                  "src": "1753:13:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1566,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1753:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1569,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1615,
                  "src": "1768:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1768:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1752:24:7"
            },
            "scope": 1616,
            "src": "1668:395:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1617,
        "src": "347:1718:7",
        "usedErrors": []
      }
    ],
    "src": "32:2034:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {
    "43113": {
      "events": {},
      "links": {},
      "address": "0xff3F6eBfe49f94094ea80ced4cbcd49DE98Af831",
      "transactionHash": "0x02d58d5e16cd3ed9f91fadd779b40a12c98d8e53865df8b4159c525e0926411e"
    },
    "1651419801304": {
      "events": {},
      "links": {},
      "address": "0xad4eb24b738844B281D8E412725a32F584120aCd",
      "transactionHash": "0xfd88f4ce15d2bf0992035ccc8fee4564f5be12639c3bad0e7db6a6a597755743"
    }
  },
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-05-04T21:32:55.737Z",
  "devdoc": {
    "details": "Factotory responsible for deploying Escrow, Custodian Wallet Logic and managed CustodianWalletProxy for both Vendor and Customer. Note Controlled by deployer account.",
    "kind": "dev",
    "methods": {
      "newCustodian(string)": {
        "details": "create a new custodian wallet",
        "params": {
          "uuid": "is the unique id of the custodian wallet"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "accounts(string)": {
        "notice": "mapping of account unique id to custodian wallet Note avoid passing predictable number such as incremental number. Use UUID string instead"
      },
      "custodianWalletLogic()": {
        "notice": "the address of the Custodian Wallet Logic"
      },
      "ochestrator()": {
        "notice": "EOA of deployer wallet"
      }
    },
    "version": 1
  }
}
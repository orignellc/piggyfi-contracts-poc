{
  "contractName": "CustodianWalletProxy",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_logic",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_escrow",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "escrow",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "logic",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_escrow\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"escrow\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"logic\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_escrow\":\"address of Escrow that can has sole control over all custodian wallets\",\"_logic\":\"address of already deployed Custodian Wallet that can receive upgrade\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"escrow()\":{\"notice\":\"address of escrow contract\"},\"logic()\":{\"notice\":\"address of wallet logic to copy code from and call using delegatecall\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CustodianWalletProxy.sol\":\"CustodianWalletProxy\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/CustodianWalletProxy.sol\":{\"keccak256\":\"0x3c2667ce9e42d97b06eb72096e5f96aa9eabb4935df9b60212f49f59120219b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f276a60f8e85ca06ffe630ddb75514514a9e79f779992186a3e354e074546979\",\"dweb:/ipfs/QmRuCyYBvJwtazjy93w8Es8rM1Nxhfr5YhnQyBwseWCiZb\"]}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b50604051610566380380610566833981810160405281019061003291906100d4565b8073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815250508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815250505050610162565b6000815190506100ce8161014b565b92915050565b600080604083850312156100eb576100ea610146565b5b60006100f9858286016100bf565b925050602061010a858286016100bf565b9150509250929050565b600061011f82610126565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b61015481610114565b811461015f57600080fd5b50565b6080516c01000000000000000000000000900460a0516c0100000000000000000000000090046103b36101b3600039600081816053015261021601526000818160e301526101f201526103b36000f3fe60806040526004361061004a576000357c010000000000000000000000000000000000000000000000000000000090048063d7dfa0dd1461019a578063e2fdcc17146101c557610051565b3661005157005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d6906102c8565b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000009050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610174576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016b906102a8565b60405180910390fd5b3660008037600080366000845af43d6000803e8060008114610195573d6000f35b3d6000fd5b3480156101a657600080fd5b506101af6101f0565b6040516101bc919061028d565b60405180910390f35b3480156101d157600080fd5b506101da610214565b6040516101e7919061028d565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b610241816102f9565b82525050565b60006102546016836102e8565b915061025f8261032b565b602082019050919050565b6000610277600f836102e8565b915061028282610354565b602082019050919050565b60006020820190506102a26000830184610238565b92915050565b600060208201905081810360008301526102c181610247565b9050919050565b600060208201905081810360008301526102e18161026a565b9050919050565b600082825260208201905092915050565b60006103048261030b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4c6f67696320636f6e7472616374206e6f742073657400000000000000000000600082015250565b7f57503a20657363726f77206f6e6c79000000000000000000000000000000000060008201525056fea2646970667358221220d6f04daae3dbb32e4ec588a1cb24aa52560e17f9ad215ff269ada4695341f23264736f6c63430008060033",
  "deployedBytecode": "0x60806040526004361061004a576000357c010000000000000000000000000000000000000000000000000000000090048063d7dfa0dd1461019a578063e2fdcc17146101c557610051565b3661005157005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d6906102c8565b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000009050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610174576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016b906102a8565b60405180910390fd5b3660008037600080366000845af43d6000803e8060008114610195573d6000f35b3d6000fd5b3480156101a657600080fd5b506101af6101f0565b6040516101bc919061028d565b60405180910390f35b3480156101d157600080fd5b506101da610214565b6040516101e7919061028d565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b610241816102f9565b82525050565b60006102546016836102e8565b915061025f8261032b565b602082019050919050565b6000610277600f836102e8565b915061028282610354565b602082019050919050565b60006020820190506102a26000830184610238565b92915050565b600060208201905081810360008301526102c181610247565b9050919050565b600060208201905081810360008301526102e18161026a565b9050919050565b600082825260208201905092915050565b60006103048261030b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4c6f67696320636f6e7472616374206e6f742073657400000000000000000000600082015250565b7f57503a20657363726f77206f6e6c79000000000000000000000000000000000060008201525056fea2646970667358221220d6f04daae3dbb32e4ec588a1cb24aa52560e17f9ad215ff269ada4695341f23264736f6c63430008060033",
  "immutableReferences": {
    "951": [
      {
        "length": 32,
        "start": 227
      },
      {
        "length": 32,
        "start": 498
      }
    ],
    "954": [
      {
        "length": 32,
        "start": 83
      },
      {
        "length": 32,
        "start": 534
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1355:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:11"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:11",
                "type": ""
              }
            ],
            "src": "7:143:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "250:413:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "296:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "298:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "298:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "298:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "271:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "280:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "267:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "267:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "292:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "263:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "263:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "260:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "389:128:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "404:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "418:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "408:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "433:74:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "479:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "490:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "475:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "475:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "499:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "443:31:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "443:64:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "433:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "527:129:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "542:16:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "556:2:11",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "546:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "572:74:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "618:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "629:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "614:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "614:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "638:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "582:31:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "582:64:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "572:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "212:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "223:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "235:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "243:6:11",
                "type": ""
              }
            ],
            "src": "156:507:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "709:35:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "719:19:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "735:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "729:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "729:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "719:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "702:6:11",
                "type": ""
              }
            ],
            "src": "669:75:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "795:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "805:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "834:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "816:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "816:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "805:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "777:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "787:7:11",
                "type": ""
              }
            ],
            "src": "750:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "897:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "907:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "922:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "929:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "918:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "918:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "907:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "879:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "889:7:11",
                "type": ""
              }
            ],
            "src": "852:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1073:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1090:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1093:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1083:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1083:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1083:12:11"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "984:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1196:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1213:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1216:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1206:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1206:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1206:12:11"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "1107:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1273:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1330:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1339:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1342:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1332:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1332:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1332:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1296:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1321:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1303:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1303:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1293:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1293:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1286:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1286:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1283:2:11"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1266:5:11",
                "type": ""
              }
            ],
            "src": "1230:122:11"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2708:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "72:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "89:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "112:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "94:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "94:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "82:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "82:37:11"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "60:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "67:3:11",
                "type": ""
              }
            ],
            "src": "7:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "277:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "287:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "353:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "358:2:11",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "294:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "294:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "287:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "459:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_3d94e7bb788358e19381856e879daa92803abde1478921ab50acbcb6d045f965",
                      "nodeType": "YulIdentifier",
                      "src": "370:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "370:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "370:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "472:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "483:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "488:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "479:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "479:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "472:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_3d94e7bb788358e19381856e879daa92803abde1478921ab50acbcb6d045f965_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "265:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "273:3:11",
                "type": ""
              }
            ],
            "src": "131:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "649:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "659:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "725:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "730:2:11",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "666:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "666:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "659:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "831:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b79f574c2ccd02d9d643e7331101f98be5350228642c9a50b91dfae347f18ebf",
                      "nodeType": "YulIdentifier",
                      "src": "742:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "742:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "742:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "844:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "855:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "860:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "851:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "851:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "844:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b79f574c2ccd02d9d643e7331101f98be5350228642c9a50b91dfae347f18ebf_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "637:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "645:3:11",
                "type": ""
              }
            ],
            "src": "503:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "973:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "983:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "995:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1006:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "991:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "991:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "983:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1063:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1076:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1087:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1072:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1072:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1019:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1019:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1019:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "945:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "957:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "968:4:11",
                "type": ""
              }
            ],
            "src": "875:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1274:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1284:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1296:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1307:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1292:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1292:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1284:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1331:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1342:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1327:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1327:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1350:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1356:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1346:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1346:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1320:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1320:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1320:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1376:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1510:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_3d94e7bb788358e19381856e879daa92803abde1478921ab50acbcb6d045f965_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1384:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1384:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1376:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3d94e7bb788358e19381856e879daa92803abde1478921ab50acbcb6d045f965__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1254:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1269:4:11",
                "type": ""
              }
            ],
            "src": "1103:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1699:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1709:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1721:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1732:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1717:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1717:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1709:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1756:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1767:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1752:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1752:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1775:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1781:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1771:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1771:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1745:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1745:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1745:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1801:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1935:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b79f574c2ccd02d9d643e7331101f98be5350228642c9a50b91dfae347f18ebf_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1809:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1809:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1801:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b79f574c2ccd02d9d643e7331101f98be5350228642c9a50b91dfae347f18ebf__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1679:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1694:4:11",
                "type": ""
              }
            ],
            "src": "1528:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2049:73:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2066:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2071:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2059:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2059:19:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2059:19:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2087:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2106:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2111:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2102:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2102:14:11"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2087:11:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2021:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2026:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2037:11:11",
                "type": ""
              }
            ],
            "src": "1953:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2173:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2183:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2212:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2194:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2194:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2183:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2155:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2165:7:11",
                "type": ""
              }
            ],
            "src": "2128:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2275:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2285:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2300:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2307:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2296:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2296:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2285:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2257:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2267:7:11",
                "type": ""
              }
            ],
            "src": "2230:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2468:66:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2490:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2498:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2486:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2486:14:11"
                      },
                      {
                        "hexValue": "4c6f67696320636f6e7472616374206e6f7420736574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2502:24:11",
                        "type": "",
                        "value": "Logic contract not set"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2479:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2479:48:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2479:48:11"
                }
              ]
            },
            "name": "store_literal_in_memory_3d94e7bb788358e19381856e879daa92803abde1478921ab50acbcb6d045f965",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2460:6:11",
                "type": ""
              }
            ],
            "src": "2362:172:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2646:59:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2668:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2676:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2664:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2664:14:11"
                      },
                      {
                        "hexValue": "57503a20657363726f77206f6e6c79",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2680:17:11",
                        "type": "",
                        "value": "WP: escrow only"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2657:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2657:41:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2657:41:11"
                }
              ]
            },
            "name": "store_literal_in_memory_b79f574c2ccd02d9d643e7331101f98be5350228642c9a50b91dfae347f18ebf",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2638:6:11",
                "type": ""
              }
            ],
            "src": "2540:165:11"
          }
        ]
      },
      "contents": "{\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_3d94e7bb788358e19381856e879daa92803abde1478921ab50acbcb6d045f965_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3d94e7bb788358e19381856e879daa92803abde1478921ab50acbcb6d045f965(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b79f574c2ccd02d9d643e7331101f98be5350228642c9a50b91dfae347f18ebf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_b79f574c2ccd02d9d643e7331101f98be5350228642c9a50b91dfae347f18ebf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3d94e7bb788358e19381856e879daa92803abde1478921ab50acbcb6d045f965__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3d94e7bb788358e19381856e879daa92803abde1478921ab50acbcb6d045f965_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b79f574c2ccd02d9d643e7331101f98be5350228642c9a50b91dfae347f18ebf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b79f574c2ccd02d9d643e7331101f98be5350228642c9a50b91dfae347f18ebf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function store_literal_in_memory_3d94e7bb788358e19381856e879daa92803abde1478921ab50acbcb6d045f965(memPtr) {\n\n        mstore(add(memPtr, 0), \"Logic contract not set\")\n\n    }\n\n    function store_literal_in_memory_b79f574c2ccd02d9d643e7331101f98be5350228642c9a50b91dfae347f18ebf(memPtr) {\n\n        mstore(add(memPtr, 0), \"WP: escrow only\")\n\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "57:2600:5:-:0;;;485:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;545:7;536:16;;;;;;;;;;;;566:6;558:14;;;;;;;;;;;;485:92;;57:2600;;7:143:11;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:507::-;235:6;243;292:2;280:9;271:7;267:23;263:32;260:2;;;298:79;;:::i;:::-;260:2;418:1;443:64;499:7;490:6;479:9;475:22;443:64;:::i;:::-;433:74;;389:128;556:2;582:64;638:7;629:6;618:9;614:22;582:64;:::i;:::-;572:74;;527:129;250:413;;;;;:::o;750:96::-;787:7;816:24;834:5;816:24;:::i;:::-;805:35;;795:51;;;:::o;852:126::-;889:7;929:42;922:5;918:54;907:65;;897:81;;;:::o;1107:117::-;1216:1;1213;1206:12;1230:122;1303:24;1321:5;1303:24;:::i;:::-;1296:5;1293:35;1283:2;;1342:1;1339;1332:12;1283:2;1273:79;:::o;57:2600:5:-;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "57:2600:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1499:6;1484:21;;:10;:21;;;1476:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1532:13;1548:5;1532:21;;1634:1;1617:19;;:5;:19;;;1613:72;;;1646:32;;;;;;;;;;:::i;:::-;;;;;;;;1613:72;2003:14;2000:1;1997;1984:34;2208:1;2205;2189:14;2186:1;2179:5;2172;2159:51;2284:16;2281:1;2278;2263:38;2322:6;2394:1;2389:66;;;;2504:16;2501:1;2494:27;2389:66;2424:16;2421:1;2414:27;181:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;257:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;181:30;;;:::o;257:31::-;;;:::o;7:118:11:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;72:53;;:::o;131:366::-;273:3;294:67;358:2;353:3;294:67;:::i;:::-;287:74;;370:93;459:3;370:93;:::i;:::-;488:2;483:3;479:12;472:19;;277:220;;;:::o;503:366::-;645:3;666:67;730:2;725:3;666:67;:::i;:::-;659:74;;742:93;831:3;742:93;:::i;:::-;860:2;855:3;851:12;844:19;;649:220;;;:::o;875:222::-;968:4;1006:2;995:9;991:18;983:26;;1019:71;1087:1;1076:9;1072:17;1063:6;1019:71;:::i;:::-;973:124;;;;:::o;1103:419::-;1269:4;1307:2;1296:9;1292:18;1284:26;;1356:9;1350:4;1346:20;1342:1;1331:9;1327:17;1320:47;1384:131;1510:4;1384:131;:::i;:::-;1376:139;;1274:248;;;:::o;1528:419::-;1694:4;1732:2;1721:9;1717:18;1709:26;;1781:9;1775:4;1771:20;1767:1;1756:9;1752:17;1745:47;1809:131;1935:4;1809:131;:::i;:::-;1801:139;;1699:248;;;:::o;1953:169::-;2037:11;2071:6;2066:3;2059:19;2111:4;2106:3;2102:14;2087:29;;2049:73;;;;:::o;2128:96::-;2165:7;2194:24;2212:5;2194:24;:::i;:::-;2183:35;;2173:51;;;:::o;2230:126::-;2267:7;2307:42;2300:5;2296:54;2285:65;;2275:81;;;:::o;2362:172::-;2502:24;2498:1;2490:6;2486:14;2479:48;2468:66;:::o;2540:165::-;2680:17;2676:1;2668:6;2664:14;2657:41;2646:59;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract CustodianWalletProxy {\n  /// @notice address of wallet logic to\n  /// copy code from and call using delegatecall\n  address public immutable logic;\n\n  /// @notice address of escrow contract\n  address public immutable escrow;\n\n  /**\n   * @param _logic address of already deployed Custodian Wallet that can receive upgrade\n   * @param _escrow address of Escrow that can has sole control over all custodian wallets\n   */\n  constructor(address _logic, address _escrow) {\n    escrow = _escrow;\n    logic = _logic;\n  }\n\n  // prettier-ignore\n  /**\n   * @dev Forward any call to any function with any set of parameters to the logic contract\n   * without it needing to know anything in particular of the logic contract’s interface.\n   *\n   * Note By using this proxy approach we are able to upgrade the logic contract at any time and allow\n   * already deployed proxy wallets benefit from new updates.\n   *\n   * Since msg.sender when calling Wallet Logic chnages to address(this) due to usage of delegate call\n   * we are unable to determinable set a modifier on functions in Wallet Logic to limit calls to Escrow.\n   * So we require that caller to all wallet proxies to call our wallet logic can only be escrow.\n   *\n   *\n   * Credit to https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\n   */\n  fallback() external payable { // solhint-disable-line no-complex-fallback\n\n    require(msg.sender ==  escrow, \"WP: escrow only\");\n\n    address _impl = logic;\n\n    // This is never suppose to happen by any chance\n    if (_impl == address(0)) {\n      revert(\"Logic contract not set\");\n    }\n\n    assembly {  // solhint-disable-line no-inline-assembly\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), _impl, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n  }\n\n  // ======== Receive =========\n\n  receive() external payable {} // solhint-disable-line no-empty-blocks\n}\n",
  "sourcePath": "/Users/drewhyte/Sites/SOLIDITY/piggyfi-contract-avax-poc/contracts/CustodianWalletProxy.sol",
  "ast": {
    "absolutePath": "project:/contracts/CustodianWalletProxy.sol",
    "exportedSymbols": {
      "CustodianWalletProxy": [
        1006
      ]
    },
    "id": 1007,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 948,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:5"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1006,
        "linearizedBaseContracts": [
          1006
        ],
        "name": "CustodianWalletProxy",
        "nameLocation": "66:20:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 949,
              "nodeType": "StructuredDocumentation",
              "src": "91:87:5",
              "text": "@notice address of wallet logic to\n copy code from and call using delegatecall"
            },
            "functionSelector": "d7dfa0dd",
            "id": 951,
            "mutability": "immutable",
            "name": "logic",
            "nameLocation": "206:5:5",
            "nodeType": "VariableDeclaration",
            "scope": 1006,
            "src": "181:30:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 950,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "181:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 952,
              "nodeType": "StructuredDocumentation",
              "src": "216:38:5",
              "text": "@notice address of escrow contract"
            },
            "functionSelector": "e2fdcc17",
            "id": 954,
            "mutability": "immutable",
            "name": "escrow",
            "nameLocation": "282:6:5",
            "nodeType": "VariableDeclaration",
            "scope": 1006,
            "src": "257:31:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 953,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "257:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 970,
              "nodeType": "Block",
              "src": "530:47:5",
              "statements": [
                {
                  "expression": {
                    "id": 964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 962,
                      "name": "escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 954,
                      "src": "536:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 963,
                      "name": "_escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 959,
                      "src": "545:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "536:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 965,
                  "nodeType": "ExpressionStatement",
                  "src": "536:16:5"
                },
                {
                  "expression": {
                    "id": 968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 966,
                      "name": "logic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 951,
                      "src": "558:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 967,
                      "name": "_logic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 957,
                      "src": "566:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "558:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 969,
                  "nodeType": "ExpressionStatement",
                  "src": "558:14:5"
                }
              ]
            },
            "documentation": {
              "id": 955,
              "nodeType": "StructuredDocumentation",
              "src": "293:189:5",
              "text": " @param _logic address of already deployed Custodian Wallet that can receive upgrade\n @param _escrow address of Escrow that can has sole control over all custodian wallets"
            },
            "id": 971,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 957,
                  "mutability": "mutable",
                  "name": "_logic",
                  "nameLocation": "505:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 971,
                  "src": "497:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 956,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "497:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 959,
                  "mutability": "mutable",
                  "name": "_escrow",
                  "nameLocation": "521:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 971,
                  "src": "513:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "513:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "496:33:5"
            },
            "returnParameters": {
              "id": 961,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "530:0:5"
            },
            "scope": 1006,
            "src": "485:92:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1000,
              "nodeType": "Block",
              "src": "1425:1124:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 976,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1484:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1484:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 978,
                          "name": "escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 954,
                          "src": "1499:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1484:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57503a20657363726f77206f6e6c79",
                        "id": 980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1507:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b79f574c2ccd02d9d643e7331101f98be5350228642c9a50b91dfae347f18ebf",
                          "typeString": "literal_string \"WP: escrow only\""
                        },
                        "value": "WP: escrow only"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b79f574c2ccd02d9d643e7331101f98be5350228642c9a50b91dfae347f18ebf",
                          "typeString": "literal_string \"WP: escrow only\""
                        }
                      ],
                      "id": 975,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1476:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1476:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 982,
                  "nodeType": "ExpressionStatement",
                  "src": "1476:49:5"
                },
                {
                  "assignments": [
                    984
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 984,
                      "mutability": "mutable",
                      "name": "_impl",
                      "nameLocation": "1540:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1000,
                      "src": "1532:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 983,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1532:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 986,
                  "initialValue": {
                    "id": 985,
                    "name": "logic",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 951,
                    "src": "1548:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1532:21:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 987,
                      "name": "_impl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 984,
                      "src": "1617:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1634:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1626:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 988,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1626:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1626:10:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1617:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 998,
                  "nodeType": "IfStatement",
                  "src": "1613:72:5",
                  "trueBody": {
                    "id": 997,
                    "nodeType": "Block",
                    "src": "1638:47:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "4c6f67696320636f6e7472616374206e6f7420736574",
                              "id": 994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1653:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3d94e7bb788358e19381856e879daa92803abde1478921ab50acbcb6d045f965",
                                "typeString": "literal_string \"Logic contract not set\""
                              },
                              "value": "Logic contract not set"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_3d94e7bb788358e19381856e879daa92803abde1478921ab50acbcb6d045f965",
                                "typeString": "literal_string \"Logic contract not set\""
                              }
                            ],
                            "id": 993,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "1646:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1646:32:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 996,
                        "nodeType": "ExpressionStatement",
                        "src": "1646:32:5"
                      }
                    ]
                  }
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1700:845:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1997:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2000:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "2003:12:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2003:14:5"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1984:12:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1984:34:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1984:34:5"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2145:65:5",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "2172:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2172:5:5"
                            },
                            {
                              "name": "_impl",
                              "nodeType": "YulIdentifier",
                              "src": "2179:5:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2186:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "2189:12:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2189:14:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2205:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2208:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "2159:12:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2159:51:5"
                        },
                        "variables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "2149:6:5",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2278:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2281:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "2284:14:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2284:16:5"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "2263:14:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2263:38:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2263:38:5"
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2396:59:5",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2421:1:5",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "2424:14:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2424:16:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "2414:6:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2414:27:5"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2414:27:5"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "2389:66:5",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2394:1:5",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2476:59:5",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2501:1:5",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "2504:14:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2504:16:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "return",
                                      "nodeType": "YulIdentifier",
                                      "src": "2494:6:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2494:27:5"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2494:27:5"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "2468:67:5",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "name": "result",
                          "nodeType": "YulIdentifier",
                          "src": "2322:6:5"
                        },
                        "nodeType": "YulSwitch",
                        "src": "2315:220:5"
                      }
                    ]
                  },
                  "evmVersion": "byzantium",
                  "externalReferences": [
                    {
                      "declaration": 984,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2179:5:5",
                      "valueSize": 1
                    }
                  ],
                  "id": 999,
                  "nodeType": "InlineAssembly",
                  "src": "1691:854:5"
                }
              ]
            },
            "documentation": {
              "id": 972,
              "nodeType": "StructuredDocumentation",
              "src": "602:792:5",
              "text": " @dev Forward any call to any function with any set of parameters to the logic contract\n without it needing to know anything in particular of the logic contract’s interface.\n Note By using this proxy approach we are able to upgrade the logic contract at any time and allow\n already deployed proxy wallets benefit from new updates.\n Since msg.sender when calling Wallet Logic chnages to address(this) due to usage of delegate call\n we are unable to determinable set a modifier on functions in Wallet Logic to limit calls to Escrow.\n So we require that caller to all wallet proxies to call our wallet logic can only be escrow.\n Credit to https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol"
            },
            "id": 1001,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1405:2:5"
            },
            "returnParameters": {
              "id": 974,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1425:0:5"
            },
            "scope": 1006,
            "src": "1397:1152:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1004,
              "nodeType": "Block",
              "src": "2613:2:5",
              "statements": []
            },
            "id": 1005,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2593:2:5"
            },
            "returnParameters": {
              "id": 1003,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2613:0:5"
            },
            "scope": 1006,
            "src": "2586:29:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1007,
        "src": "57:2600:5",
        "usedErrors": []
      }
    ],
    "src": "32:2626:5"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/CustodianWalletProxy.sol",
    "exportedSymbols": {
      "CustodianWalletProxy": [
        1006
      ]
    },
    "id": 1007,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 948,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:5"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1006,
        "linearizedBaseContracts": [
          1006
        ],
        "name": "CustodianWalletProxy",
        "nameLocation": "66:20:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 949,
              "nodeType": "StructuredDocumentation",
              "src": "91:87:5",
              "text": "@notice address of wallet logic to\n copy code from and call using delegatecall"
            },
            "functionSelector": "d7dfa0dd",
            "id": 951,
            "mutability": "immutable",
            "name": "logic",
            "nameLocation": "206:5:5",
            "nodeType": "VariableDeclaration",
            "scope": 1006,
            "src": "181:30:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 950,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "181:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 952,
              "nodeType": "StructuredDocumentation",
              "src": "216:38:5",
              "text": "@notice address of escrow contract"
            },
            "functionSelector": "e2fdcc17",
            "id": 954,
            "mutability": "immutable",
            "name": "escrow",
            "nameLocation": "282:6:5",
            "nodeType": "VariableDeclaration",
            "scope": 1006,
            "src": "257:31:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 953,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "257:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 970,
              "nodeType": "Block",
              "src": "530:47:5",
              "statements": [
                {
                  "expression": {
                    "id": 964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 962,
                      "name": "escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 954,
                      "src": "536:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 963,
                      "name": "_escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 959,
                      "src": "545:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "536:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 965,
                  "nodeType": "ExpressionStatement",
                  "src": "536:16:5"
                },
                {
                  "expression": {
                    "id": 968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 966,
                      "name": "logic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 951,
                      "src": "558:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 967,
                      "name": "_logic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 957,
                      "src": "566:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "558:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 969,
                  "nodeType": "ExpressionStatement",
                  "src": "558:14:5"
                }
              ]
            },
            "documentation": {
              "id": 955,
              "nodeType": "StructuredDocumentation",
              "src": "293:189:5",
              "text": " @param _logic address of already deployed Custodian Wallet that can receive upgrade\n @param _escrow address of Escrow that can has sole control over all custodian wallets"
            },
            "id": 971,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 957,
                  "mutability": "mutable",
                  "name": "_logic",
                  "nameLocation": "505:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 971,
                  "src": "497:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 956,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "497:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 959,
                  "mutability": "mutable",
                  "name": "_escrow",
                  "nameLocation": "521:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 971,
                  "src": "513:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "513:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "496:33:5"
            },
            "returnParameters": {
              "id": 961,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "530:0:5"
            },
            "scope": 1006,
            "src": "485:92:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1000,
              "nodeType": "Block",
              "src": "1425:1124:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 976,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1484:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1484:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 978,
                          "name": "escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 954,
                          "src": "1499:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1484:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57503a20657363726f77206f6e6c79",
                        "id": 980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1507:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b79f574c2ccd02d9d643e7331101f98be5350228642c9a50b91dfae347f18ebf",
                          "typeString": "literal_string \"WP: escrow only\""
                        },
                        "value": "WP: escrow only"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b79f574c2ccd02d9d643e7331101f98be5350228642c9a50b91dfae347f18ebf",
                          "typeString": "literal_string \"WP: escrow only\""
                        }
                      ],
                      "id": 975,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1476:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1476:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 982,
                  "nodeType": "ExpressionStatement",
                  "src": "1476:49:5"
                },
                {
                  "assignments": [
                    984
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 984,
                      "mutability": "mutable",
                      "name": "_impl",
                      "nameLocation": "1540:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1000,
                      "src": "1532:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 983,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1532:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 986,
                  "initialValue": {
                    "id": 985,
                    "name": "logic",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 951,
                    "src": "1548:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1532:21:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 987,
                      "name": "_impl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 984,
                      "src": "1617:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1634:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1626:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 988,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1626:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1626:10:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1617:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 998,
                  "nodeType": "IfStatement",
                  "src": "1613:72:5",
                  "trueBody": {
                    "id": 997,
                    "nodeType": "Block",
                    "src": "1638:47:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "4c6f67696320636f6e7472616374206e6f7420736574",
                              "id": 994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1653:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3d94e7bb788358e19381856e879daa92803abde1478921ab50acbcb6d045f965",
                                "typeString": "literal_string \"Logic contract not set\""
                              },
                              "value": "Logic contract not set"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_3d94e7bb788358e19381856e879daa92803abde1478921ab50acbcb6d045f965",
                                "typeString": "literal_string \"Logic contract not set\""
                              }
                            ],
                            "id": 993,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "1646:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1646:32:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 996,
                        "nodeType": "ExpressionStatement",
                        "src": "1646:32:5"
                      }
                    ]
                  }
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1700:845:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1997:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2000:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "2003:12:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2003:14:5"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1984:12:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1984:34:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1984:34:5"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2145:65:5",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "2172:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2172:5:5"
                            },
                            {
                              "name": "_impl",
                              "nodeType": "YulIdentifier",
                              "src": "2179:5:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2186:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "2189:12:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2189:14:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2205:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2208:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "2159:12:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2159:51:5"
                        },
                        "variables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "2149:6:5",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2278:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2281:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "2284:14:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2284:16:5"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "2263:14:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2263:38:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2263:38:5"
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2396:59:5",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2421:1:5",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "2424:14:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2424:16:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "2414:6:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2414:27:5"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2414:27:5"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "2389:66:5",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2394:1:5",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2476:59:5",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2501:1:5",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "2504:14:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2504:16:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "return",
                                      "nodeType": "YulIdentifier",
                                      "src": "2494:6:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2494:27:5"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2494:27:5"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "2468:67:5",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "name": "result",
                          "nodeType": "YulIdentifier",
                          "src": "2322:6:5"
                        },
                        "nodeType": "YulSwitch",
                        "src": "2315:220:5"
                      }
                    ]
                  },
                  "evmVersion": "byzantium",
                  "externalReferences": [
                    {
                      "declaration": 984,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2179:5:5",
                      "valueSize": 1
                    }
                  ],
                  "id": 999,
                  "nodeType": "InlineAssembly",
                  "src": "1691:854:5"
                }
              ]
            },
            "documentation": {
              "id": 972,
              "nodeType": "StructuredDocumentation",
              "src": "602:792:5",
              "text": " @dev Forward any call to any function with any set of parameters to the logic contract\n without it needing to know anything in particular of the logic contract’s interface.\n Note By using this proxy approach we are able to upgrade the logic contract at any time and allow\n already deployed proxy wallets benefit from new updates.\n Since msg.sender when calling Wallet Logic chnages to address(this) due to usage of delegate call\n we are unable to determinable set a modifier on functions in Wallet Logic to limit calls to Escrow.\n So we require that caller to all wallet proxies to call our wallet logic can only be escrow.\n Credit to https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol"
            },
            "id": 1001,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1405:2:5"
            },
            "returnParameters": {
              "id": 974,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1425:0:5"
            },
            "scope": 1006,
            "src": "1397:1152:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1004,
              "nodeType": "Block",
              "src": "2613:2:5",
              "statements": []
            },
            "id": 1005,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2593:2:5"
            },
            "returnParameters": {
              "id": 1003,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2613:0:5"
            },
            "scope": 1006,
            "src": "2586:29:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1007,
        "src": "57:2600:5",
        "usedErrors": []
      }
    ],
    "src": "32:2626:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-05-01T16:10:23.486Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_escrow": "address of Escrow that can has sole control over all custodian wallets",
          "_logic": "address of already deployed Custodian Wallet that can receive upgrade"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "escrow()": {
        "notice": "address of escrow contract"
      },
      "logic()": {
        "notice": "address of wallet logic to copy code from and call using delegatecall"
      }
    },
    "version": 1
  }
}
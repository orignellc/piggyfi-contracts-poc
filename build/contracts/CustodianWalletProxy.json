{
  "contractName": "CustodianWalletProxy",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_logic",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ochestrator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "orderId",
          "type": "uint256"
        }
      ],
      "name": "ClosedOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "orderId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "orderType",
          "type": "uint8"
        }
      ],
      "name": "OpenOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "orderId",
          "type": "uint256"
        }
      ],
      "name": "OrderFulfilled",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "logic",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ochestrator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "openOrders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orders",
      "outputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "orderType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fulfiledTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ochestrator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"ClosedOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"orderType\",\"type\":\"uint8\"}],\"name\":\"OpenOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"OrderFulfilled\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"logic\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ochestrator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"openOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fulfiledTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_logic\":\"address of already deployed Custodian Wallet that can receive upgrade\",\"_ochestrator\":\"address of Escrow that can has sole control over all custodian wallets\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"address of factory\"},\"logic()\":{\"notice\":\"address of wallet logic to copy code from and call using delegatecall\"},\"ochestrator()\":{\"notice\":\"address of escrow contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CustodianWalletProxy.sol\":\"CustodianWalletProxy\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/CustodianWalletProxy.sol\":{\"keccak256\":\"0x1c1d8005a35ed3b7610ad9581be7111905e49f44bfd4c4c49d9ea22ef1add5c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6714f6954665ff972c8d9ea9ef70ca0c8a083ab7c64ff95f02b7d726644cd2ed\",\"dweb:/ipfs/QmUrtfkSJYjt3gNT2ENyFeWg6vhpfy7wEJkirrvwq9YAK2\"]},\"project:/contracts/Types.sol\":{\"keccak256\":\"0xe4beade0ea94f390211c65619d4273358355625f072d74c894e1e6bb5f11e6b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e64532d58a46e7c5a34b4cdd85877278cb642b24dfc3a71200e7c28e398ab761\",\"dweb:/ipfs/Qmb6nXdGEuThpnVRM8d5iyCFWBitYaTPUW21nXdG6DHXDU\"]}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b5060405161095338038061095383398181016040528101906100329190610116565b8173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815250508273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506101b7565b600081519050610110816101a0565b92915050565b60008060006060848603121561012f5761012e61019b565b5b600061013d86828701610101565b935050602061014e86828701610101565b925050604061015f86828701610101565b9150509250925092565b60006101748261017b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6101a981610169565b81146101b457600080fd5b50565b6080516c01000000000000000000000000900460a0516c01000000000000000000000000900461074a61020960003960008181607401526102f10152600081816101040152610406015261074a6000f3fe60806040526004361061006b576000357c0100000000000000000000000000000000000000000000000000000000900480631e7cea80146101bb5780639c811d43146101f8578063a85c38ef14610223578063c45a015514610268578063d7dfa0dd1461029357610072565b3661007257005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610100576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f7906105da565b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000009050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610195576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018c906105fa565b60405180910390fd5b3660008037600080366000845af43d6000803e80600081146101b6573d6000f35b3d6000fd5b3480156101c757600080fd5b506101e260048036038101906101dd9190610452565b6102be565b6040516101ef919061061a565b60405180910390f35b34801561020457600080fd5b5061020d6102ef565b60405161021a9190610532565b60405180910390f35b34801561022f57600080fd5b5061024a60048036038101906102459190610492565b610313565b60405161025f9998979695949392919061054d565b60405180910390f35b34801561027457600080fd5b5061027d6103de565b60405161028a9190610532565b60405180910390f35b34801561029f57600080fd5b506102a8610404565b6040516102b59190610532565b60405180910390f35b600160205281600052604060002081815481106102da57600080fd5b90600052602060002001600091509150505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061032357600080fd5b90600052602060002090600902016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154908060050154908060060160009054906101000a900460ff16908060070154908060080154905089565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081359050610437816106e6565b92915050565b60008135905061044c816106fd565b92915050565b600080604083850312156104695761046861068f565b5b600061047785828601610428565b92505060206104888582860161043d565b9150509250929050565b6000602082840312156104a8576104a761068f565b5b60006104b68482850161043d565b91505092915050565b6104c881610646565b82525050565b60006104db601183610635565b91506104e682610694565b602082019050919050565b60006104fe601683610635565b9150610509826106bd565b602082019050919050565b61051d81610678565b82525050565b61052c81610682565b82525050565b600060208201905061054760008301846104bf565b92915050565b600061012082019050610563600083018c6104bf565b610570602083018b6104bf565b61057d604083018a6104bf565b61058a6060830189610514565b6105976080830188610514565b6105a460a0830187610514565b6105b160c0830186610523565b6105be60e0830185610514565b6105cc610100830184610514565b9a9950505050505050505050565b600060208201905081810360008301526105f3816104ce565b9050919050565b60006020820190508181036000830152610613816104f1565b9050919050565b600060208201905061062f6000830184610514565b92915050565b600082825260208201905092915050565b600061065182610658565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600080fd5b7f57503a206465706c6f796572206f6e6c79000000000000000000000000000000600082015250565b7f4c6f67696320636f6e7472616374206e6f742073657400000000000000000000600082015250565b6106ef81610646565b81146106fa57600080fd5b50565b61070681610678565b811461071157600080fd5b5056fea26469706673582212201f9f3ea4816765db486f5fe964f84c5dceda1a1f8baec299053f08962ad445fd64736f6c63430008060033",
  "deployedBytecode": "0x60806040526004361061006b576000357c0100000000000000000000000000000000000000000000000000000000900480631e7cea80146101bb5780639c811d43146101f8578063a85c38ef14610223578063c45a015514610268578063d7dfa0dd1461029357610072565b3661007257005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610100576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f7906105da565b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000009050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610195576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018c906105fa565b60405180910390fd5b3660008037600080366000845af43d6000803e80600081146101b6573d6000f35b3d6000fd5b3480156101c757600080fd5b506101e260048036038101906101dd9190610452565b6102be565b6040516101ef919061061a565b60405180910390f35b34801561020457600080fd5b5061020d6102ef565b60405161021a9190610532565b60405180910390f35b34801561022f57600080fd5b5061024a60048036038101906102459190610492565b610313565b60405161025f9998979695949392919061054d565b60405180910390f35b34801561027457600080fd5b5061027d6103de565b60405161028a9190610532565b60405180910390f35b34801561029f57600080fd5b506102a8610404565b6040516102b59190610532565b60405180910390f35b600160205281600052604060002081815481106102da57600080fd5b90600052602060002001600091509150505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061032357600080fd5b90600052602060002090600902016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154908060050154908060060160009054906101000a900460ff16908060070154908060080154905089565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081359050610437816106e6565b92915050565b60008135905061044c816106fd565b92915050565b600080604083850312156104695761046861068f565b5b600061047785828601610428565b92505060206104888582860161043d565b9150509250929050565b6000602082840312156104a8576104a761068f565b5b60006104b68482850161043d565b91505092915050565b6104c881610646565b82525050565b60006104db601183610635565b91506104e682610694565b602082019050919050565b60006104fe601683610635565b9150610509826106bd565b602082019050919050565b61051d81610678565b82525050565b61052c81610682565b82525050565b600060208201905061054760008301846104bf565b92915050565b600061012082019050610563600083018c6104bf565b610570602083018b6104bf565b61057d604083018a6104bf565b61058a6060830189610514565b6105976080830188610514565b6105a460a0830187610514565b6105b160c0830186610523565b6105be60e0830185610514565b6105cc610100830184610514565b9a9950505050505050505050565b600060208201905081810360008301526105f3816104ce565b9050919050565b60006020820190508181036000830152610613816104f1565b9050919050565b600060208201905061062f6000830184610514565b92915050565b600082825260208201905092915050565b600061065182610658565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600080fd5b7f57503a206465706c6f796572206f6e6c79000000000000000000000000000000600082015250565b7f4c6f67696320636f6e7472616374206e6f742073657400000000000000000000600082015250565b6106ef81610646565b81146106fa57600080fd5b50565b61070681610678565b811461071157600080fd5b5056fea26469706673582212201f9f3ea4816765db486f5fe964f84c5dceda1a1f8baec299053f08962ad445fd64736f6c63430008060033",
  "immutableReferences": {
    "1079": [
      {
        "length": 32,
        "start": 260
      },
      {
        "length": 32,
        "start": 1030
      }
    ],
    "1082": [
      {
        "length": 32,
        "start": 116
      },
      {
        "length": 32,
        "start": 753
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1511:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:11"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:11",
                "type": ""
              }
            ],
            "src": "7:143:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "267:552:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "313:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "315:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "315:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "315:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "288:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "297:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "284:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "284:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "309:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "280:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "280:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "277:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "406:128:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "421:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "435:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "425:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "450:74:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "496:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "507:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "492:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "492:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "516:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "460:31:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "460:64:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "450:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "544:129:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "559:16:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "573:2:11",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "563:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "589:74:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "635:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "646:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "631:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "631:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "655:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "599:31:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "599:64:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "589:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "683:129:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "698:16:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "712:2:11",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "702:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "728:74:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "774:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "785:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "770:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "770:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "794:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "738:31:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "738:64:11"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "728:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "221:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "232:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "244:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "252:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "260:6:11",
                "type": ""
              }
            ],
            "src": "156:663:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "865:35:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "875:19:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "891:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "885:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "885:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "875:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "858:6:11",
                "type": ""
              }
            ],
            "src": "825:75:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "951:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "961:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "990:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "972:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "972:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "961:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "933:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "943:7:11",
                "type": ""
              }
            ],
            "src": "906:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1053:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1063:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1078:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1085:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1074:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1074:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1063:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1035:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1045:7:11",
                "type": ""
              }
            ],
            "src": "1008:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1229:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1246:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1249:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1239:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1239:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1239:12:11"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "1140:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1352:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1369:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1372:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1362:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1362:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1362:12:11"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "1263:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1429:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1486:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1495:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1498:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1488:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1488:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1488:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1452:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1477:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1459:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1459:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1449:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1449:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1442:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1442:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1439:2:11"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1422:5:11",
                "type": ""
              }
            ],
            "src": "1386:122:11"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6149:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:11"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:11",
                "type": ""
              }
            ],
            "src": "7:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "204:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "214:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "236:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "223:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "214:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "279:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "252:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "252:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "252:33:11"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "182:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "190:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "198:5:11",
                "type": ""
              }
            ],
            "src": "152:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "380:391:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "426:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "428:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "428:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "428:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "401:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "410:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "397:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "397:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "422:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "393:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "393:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "390:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "519:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "534:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "548:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "538:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "563:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "598:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "609:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "594:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "594:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "618:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "573:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "573:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "563:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "646:118:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "661:16:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "675:2:11",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "665:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "691:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "726:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "737:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "722:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "722:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "746:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "701:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "701:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "691:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "342:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "353:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "365:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "373:6:11",
                "type": ""
              }
            ],
            "src": "297:474:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "843:263:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "889:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "891:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "891:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "891:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "864:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "873:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "860:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "860:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "885:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "856:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "856:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "853:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "982:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "997:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1011:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1001:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1026:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1061:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1072:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1057:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1057:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1081:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1036:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1036:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1026:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "813:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "824:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "836:6:11",
                "type": ""
              }
            ],
            "src": "777:329:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1177:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1194:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1217:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1199:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1199:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1187:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1187:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1187:37:11"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1165:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1172:3:11",
                "type": ""
              }
            ],
            "src": "1112:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1382:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1392:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1458:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1463:2:11",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1399:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1399:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1392:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1564:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_1650219b0561420e97eb6e0d17e458f704e05b07db7e70e31a383dd26ed1c9fc",
                      "nodeType": "YulIdentifier",
                      "src": "1475:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1475:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1475:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1577:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1588:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1593:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1584:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1584:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1577:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_1650219b0561420e97eb6e0d17e458f704e05b07db7e70e31a383dd26ed1c9fc_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1370:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1378:3:11",
                "type": ""
              }
            ],
            "src": "1236:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1754:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1764:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1830:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1835:2:11",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1771:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1771:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1764:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1936:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_3d94e7bb788358e19381856e879daa92803abde1478921ab50acbcb6d045f965",
                      "nodeType": "YulIdentifier",
                      "src": "1847:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1847:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1847:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1949:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1960:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1965:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1956:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1956:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1949:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_3d94e7bb788358e19381856e879daa92803abde1478921ab50acbcb6d045f965_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1742:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1750:3:11",
                "type": ""
              }
            ],
            "src": "1608:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2045:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2062:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2085:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2067:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2067:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2055:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2055:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2055:37:11"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2033:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2040:3:11",
                "type": ""
              }
            ],
            "src": "1980:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2165:51:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2182:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2203:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "2187:15:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2187:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2175:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2175:35:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2175:35:11"
                }
              ]
            },
            "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2153:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2160:3:11",
                "type": ""
              }
            ],
            "src": "2104:112:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2320:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2330:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2342:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2353:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2338:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2338:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2330:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2410:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2423:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2434:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2419:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2419:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2366:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2366:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2366:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2292:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2304:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2315:4:11",
                "type": ""
              }
            ],
            "src": "2222:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2768:782:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2778:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2790:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2801:3:11",
                        "type": "",
                        "value": "288"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2786:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2786:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2778:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2859:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2872:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2883:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2868:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2868:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2815:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2815:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2815:71:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2940:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2953:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2964:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2949:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2949:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2896:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2896:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2896:72:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3022:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3035:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3046:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3031:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3031:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2978:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2978:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2978:72:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "3104:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3117:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3128:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3113:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3113:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3060:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3060:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3060:72:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "3186:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3199:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3210:3:11",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3195:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3195:19:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3142:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3142:73:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3142:73:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "3269:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3282:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3293:3:11",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3278:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3278:19:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3225:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3225:73:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3225:73:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "3348:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3361:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3372:3:11",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3357:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3357:19:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3308:39:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3308:69:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3308:69:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "3431:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3444:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3455:3:11",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3440:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3440:19:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3387:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3387:73:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3387:73:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value8",
                        "nodeType": "YulIdentifier",
                        "src": "3514:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3527:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3538:3:11",
                            "type": "",
                            "value": "256"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3523:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3523:19:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3470:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3470:73:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3470:73:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint8_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint8_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2676:9:11",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "2688:6:11",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "2696:6:11",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "2704:6:11",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "2712:6:11",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2720:6:11",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2728:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2736:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2744:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2752:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2763:4:11",
                "type": ""
              }
            ],
            "src": "2450:1100:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3727:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3737:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3749:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3760:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3745:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3745:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3737:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3784:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3795:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3780:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3780:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3803:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3809:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3799:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3799:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3773:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3773:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3773:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3829:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3963:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_1650219b0561420e97eb6e0d17e458f704e05b07db7e70e31a383dd26ed1c9fc_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3837:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3837:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3829:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1650219b0561420e97eb6e0d17e458f704e05b07db7e70e31a383dd26ed1c9fc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3707:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3722:4:11",
                "type": ""
              }
            ],
            "src": "3556:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4152:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4162:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4174:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4185:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4170:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4170:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4162:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4209:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4220:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4205:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4205:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4228:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4234:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4224:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4224:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4198:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4198:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4198:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4254:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4388:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_3d94e7bb788358e19381856e879daa92803abde1478921ab50acbcb6d045f965_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4262:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4262:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4254:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3d94e7bb788358e19381856e879daa92803abde1478921ab50acbcb6d045f965__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4132:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4147:4:11",
                "type": ""
              }
            ],
            "src": "3981:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4504:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4514:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4526:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4537:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4522:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4522:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4514:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4594:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4607:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4618:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4603:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4603:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4550:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4550:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4550:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4476:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4488:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4499:4:11",
                "type": ""
              }
            ],
            "src": "4406:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4674:35:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4684:19:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4700:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4694:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4694:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "4684:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4667:6:11",
                "type": ""
              }
            ],
            "src": "4634:75:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4811:73:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4828:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4833:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4821:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4821:19:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4821:19:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4849:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4868:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4873:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4864:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4864:14:11"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4849:11:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4783:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4788:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4799:11:11",
                "type": ""
              }
            ],
            "src": "4715:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4935:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4945:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4974:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "4956:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4956:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4945:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4917:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4927:7:11",
                "type": ""
              }
            ],
            "src": "4890:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5037:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5047:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5062:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5069:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5058:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5058:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5047:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5019:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5029:7:11",
                "type": ""
              }
            ],
            "src": "4992:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5169:32:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5179:16:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5190:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5179:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5151:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5161:7:11",
                "type": ""
              }
            ],
            "src": "5124:77:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5250:43:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5260:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5275:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5282:4:11",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5271:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5271:16:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5260:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5232:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5242:7:11",
                "type": ""
              }
            ],
            "src": "5207:86:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5388:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5405:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5408:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5398:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5398:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5398:12:11"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "5299:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5511:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5528:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5531:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5521:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5521:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5521:12:11"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "5422:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5651:61:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5673:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5681:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5669:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5669:14:11"
                      },
                      {
                        "hexValue": "57503a206465706c6f796572206f6e6c79",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5685:19:11",
                        "type": "",
                        "value": "WP: deployer only"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5662:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5662:43:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5662:43:11"
                }
              ]
            },
            "name": "store_literal_in_memory_1650219b0561420e97eb6e0d17e458f704e05b07db7e70e31a383dd26ed1c9fc",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5643:6:11",
                "type": ""
              }
            ],
            "src": "5545:167:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5824:66:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5846:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5854:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5842:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5842:14:11"
                      },
                      {
                        "hexValue": "4c6f67696320636f6e7472616374206e6f7420736574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5858:24:11",
                        "type": "",
                        "value": "Logic contract not set"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5835:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5835:48:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5835:48:11"
                }
              ]
            },
            "name": "store_literal_in_memory_3d94e7bb788358e19381856e879daa92803abde1478921ab50acbcb6d045f965",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5816:6:11",
                "type": ""
              }
            ],
            "src": "5718:172:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5939:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5996:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6005:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6008:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5998:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5998:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5998:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5962:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5987:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "5969:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5969:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5959:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5959:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5952:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5952:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "5949:2:11"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5932:5:11",
                "type": ""
              }
            ],
            "src": "5896:122:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6067:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6124:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6133:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6136:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6126:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6126:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6126:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6090:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6115:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "6097:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6097:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6087:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6087:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6080:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6080:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "6077:2:11"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6060:5:11",
                "type": ""
              }
            ],
            "src": "6024:122:11"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_1650219b0561420e97eb6e0d17e458f704e05b07db7e70e31a383dd26ed1c9fc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_1650219b0561420e97eb6e0d17e458f704e05b07db7e70e31a383dd26ed1c9fc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_3d94e7bb788358e19381856e879daa92803abde1478921ab50acbcb6d045f965_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3d94e7bb788358e19381856e879daa92803abde1478921ab50acbcb6d045f965(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint8_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint8_t_uint256_t_uint256__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1650219b0561420e97eb6e0d17e458f704e05b07db7e70e31a383dd26ed1c9fc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1650219b0561420e97eb6e0d17e458f704e05b07db7e70e31a383dd26ed1c9fc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3d94e7bb788358e19381856e879daa92803abde1478921ab50acbcb6d045f965__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3d94e7bb788358e19381856e879daa92803abde1478921ab50acbcb6d045f965_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_1650219b0561420e97eb6e0d17e458f704e05b07db7e70e31a383dd26ed1c9fc(memPtr) {\n\n        mstore(add(memPtr, 0), \"WP: deployer only\")\n\n    }\n\n    function store_literal_in_memory_3d94e7bb788358e19381856e879daa92803abde1478921ab50acbcb6d045f965(memPtr) {\n\n        mstore(add(memPtr, 0), \"Logic contract not set\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "80:2657:5:-:0;;;587:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;691:12;677:26;;;;;;;;;;;;717:6;709:14;;;;;;;;;;;;739:8;729:7;;:18;;;;;;;;;;;;;;;;;;587:165;;;80:2657;;7:143:11;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:663::-;244:6;252;260;309:2;297:9;288:7;284:23;280:32;277:2;;;315:79;;:::i;:::-;277:2;435:1;460:64;516:7;507:6;496:9;492:22;460:64;:::i;:::-;450:74;;406:128;573:2;599:64;655:7;646:6;635:9;631:22;599:64;:::i;:::-;589:74;;544:129;712:2;738:64;794:7;785:6;774:9;770:22;738:64;:::i;:::-;728:74;;683:129;267:552;;;;;:::o;906:96::-;943:7;972:24;990:5;972:24;:::i;:::-;961:35;;951:51;;;:::o;1008:126::-;1045:7;1085:42;1078:5;1074:54;1063:65;;1053:81;;;:::o;1263:117::-;1372:1;1369;1362:12;1386:122;1459:24;1477:5;1459:24;:::i;:::-;1452:5;1449:35;1439:2;;1498:1;1495;1488:12;1439:2;1429:79;:::o;80:2657:5:-;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "80:2657:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1677:11;1663:25;;:10;:25;;;1655:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1717:13;1733:5;1717:21;;1819:1;1802:19;;:5;:19;;;1798:72;;;1831:32;;;;;;;;;;:::i;:::-;;;;;;;;1798:72;2169:14;2166:1;2163;2150:34;2356:1;2353;2337:14;2334:1;2327:5;2320;2307:51;2420:16;2417:1;2414;2399:38;2452:6;2512:1;2507:52;;;;2594:16;2591:1;2584:27;2507:52;2534:16;2531:1;2524:27;346:47:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;349:36:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;320:21:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;156:22:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;273:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;346:47:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;349:36:5:-;;;:::o;320:21:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;156:22:5:-;;;;;;;;;;;;;:::o;273:30::-;;;:::o;7:139:11:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:474::-;365:6;373;422:2;410:9;401:7;397:23;393:32;390:2;;;428:79;;:::i;:::-;390:2;548:1;573:53;618:7;609:6;598:9;594:22;573:53;:::i;:::-;563:63;;519:117;675:2;701:53;746:7;737:6;726:9;722:22;701:53;:::i;:::-;691:63;;646:118;380:391;;;;;:::o;777:329::-;836:6;885:2;873:9;864:7;860:23;856:32;853:2;;;891:79;;:::i;:::-;853:2;1011:1;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;982:117;843:263;;;;:::o;1112:118::-;1199:24;1217:5;1199:24;:::i;:::-;1194:3;1187:37;1177:53;;:::o;1236:366::-;1378:3;1399:67;1463:2;1458:3;1399:67;:::i;:::-;1392:74;;1475:93;1564:3;1475:93;:::i;:::-;1593:2;1588:3;1584:12;1577:19;;1382:220;;;:::o;1608:366::-;1750:3;1771:67;1835:2;1830:3;1771:67;:::i;:::-;1764:74;;1847:93;1936:3;1847:93;:::i;:::-;1965:2;1960:3;1956:12;1949:19;;1754:220;;;:::o;1980:118::-;2067:24;2085:5;2067:24;:::i;:::-;2062:3;2055:37;2045:53;;:::o;2104:112::-;2187:22;2203:5;2187:22;:::i;:::-;2182:3;2175:35;2165:51;;:::o;2222:222::-;2315:4;2353:2;2342:9;2338:18;2330:26;;2366:71;2434:1;2423:9;2419:17;2410:6;2366:71;:::i;:::-;2320:124;;;;:::o;2450:1100::-;2763:4;2801:3;2790:9;2786:19;2778:27;;2815:71;2883:1;2872:9;2868:17;2859:6;2815:71;:::i;:::-;2896:72;2964:2;2953:9;2949:18;2940:6;2896:72;:::i;:::-;2978;3046:2;3035:9;3031:18;3022:6;2978:72;:::i;:::-;3060;3128:2;3117:9;3113:18;3104:6;3060:72;:::i;:::-;3142:73;3210:3;3199:9;3195:19;3186:6;3142:73;:::i;:::-;3225;3293:3;3282:9;3278:19;3269:6;3225:73;:::i;:::-;3308:69;3372:3;3361:9;3357:19;3348:6;3308:69;:::i;:::-;3387:73;3455:3;3444:9;3440:19;3431:6;3387:73;:::i;:::-;3470;3538:3;3527:9;3523:19;3514:6;3470:73;:::i;:::-;2768:782;;;;;;;;;;;;:::o;3556:419::-;3722:4;3760:2;3749:9;3745:18;3737:26;;3809:9;3803:4;3799:20;3795:1;3784:9;3780:17;3773:47;3837:131;3963:4;3837:131;:::i;:::-;3829:139;;3727:248;;;:::o;3981:419::-;4147:4;4185:2;4174:9;4170:18;4162:26;;4234:9;4228:4;4224:20;4220:1;4209:9;4205:17;4198:47;4262:131;4388:4;4262:131;:::i;:::-;4254:139;;4152:248;;;:::o;4406:222::-;4499:4;4537:2;4526:9;4522:18;4514:26;;4550:71;4618:1;4607:9;4603:17;4594:6;4550:71;:::i;:::-;4504:124;;;;:::o;4715:169::-;4799:11;4833:6;4828:3;4821:19;4873:4;4868:3;4864:14;4849:29;;4811:73;;;;:::o;4890:96::-;4927:7;4956:24;4974:5;4956:24;:::i;:::-;4945:35;;4935:51;;;:::o;4992:126::-;5029:7;5069:42;5062:5;5058:54;5047:65;;5037:81;;;:::o;5124:77::-;5161:7;5190:5;5179:16;;5169:32;;;:::o;5207:86::-;5242:7;5282:4;5275:5;5271:16;5260:27;;5250:43;;;:::o;5422:117::-;5531:1;5528;5521:12;5545:167;5685:19;5681:1;5673:6;5669:14;5662:43;5651:61;:::o;5718:172::-;5858:24;5854:1;5846:6;5842:14;5835:48;5824:66;:::o;5896:122::-;5969:24;5987:5;5969:24;:::i;:::-;5962:5;5959:35;5949:2;;6008:1;6005;5998:12;5949:2;5939:79;:::o;6024:122::-;6097:24;6115:5;6097:24;:::i;:::-;6090:5;6087:35;6077:2;;6136:1;6133;6126:12;6077:2;6067:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./Types.sol\";\n\ncontract CustodianWalletProxy is Types {\n  /// @notice address of factory\n  address public factory;\n\n  /// @notice address of wallet logic to\n  /// copy code from and call using delegatecall\n  address public immutable logic;\n\n  /// @notice address of escrow contract\n  address public immutable ochestrator;\n\n  /**\n   * @param _logic address of already deployed Custodian Wallet that can receive upgrade\n   * @param _ochestrator address of Escrow that can has sole control over all custodian wallets\n   */\n  constructor(\n    address _logic,\n    address _ochestrator,\n    address _factory\n  ) {\n    ochestrator = _ochestrator;\n    logic = _logic;\n    factory = _factory;\n  }\n\n  // prettier-ignore\n  /**\n   * @dev Forward any call to any function with any set of parameters to the logic contract\n   * without it needing to know anything in particular of the logic contract’s interface.\n   *\n   * Note By using this proxy approach we are able to upgrade the logic contract at any time and allow\n   * already deployed proxy wallets benefit from new updates.\n   *\n   * Since msg.sender when calling Wallet Logic chnages to address(this) due to usage of delegate call\n   * we are unable to determinable set a modifier on functions in Wallet Logic to limit calls to Escrow.\n   * So we require that caller to all wallet proxies to call our wallet logic can only be escrow.\n   *\n   *\n   * Credit to https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol\n   */\n  fallback() external payable {\n    // solhint-disable-line no-complex-fallback\n\n    require(msg.sender == ochestrator, \"WP: deployer only\");\n\n    address _impl = logic;\n\n    // This is never suppose to happen by any chance\n    if (_impl == address(0)) {\n      revert(\"Logic contract not set\");\n    }\n\n    assembly {\n      // solhint-disable-line no-inline-assembly\n      // Copy msg.data. We take full control of memory in this inline assembly\n      // block because it will not return to Solidity code. We overwrite the\n      // Solidity scratch pad at memory position 0.\n      calldatacopy(0, 0, calldatasize())\n\n      // Call the implementation.\n      // out and outsize are 0 because we don't know the size yet.\n      let result := delegatecall(gas(), _impl, 0, calldatasize(), 0, 0)\n\n      // Copy the returned data.\n      returndatacopy(0, 0, returndatasize())\n\n      switch result\n      // delegatecall returns 0 on error.\n      case 0 {\n        revert(0, returndatasize())\n      }\n      default {\n        return(0, returndatasize())\n      }\n    }\n  }\n\n  // ======== Receive =========\n\n  receive() external payable {} // solhint-disable-line no-empty-blocks\n}\n",
  "sourcePath": "/Users/drewhyte/Sites/SOLIDITY/piggyfi-contract-avax-poc/contracts/CustodianWalletProxy.sol",
  "ast": {
    "absolutePath": "project:/contracts/CustodianWalletProxy.sol",
    "exportedSymbols": {
      "CustodianWalletProxy": [
        1140
      ],
      "Types": [
        1608
      ]
    },
    "id": 1141,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1070,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:5"
      },
      {
        "absolutePath": "project:/contracts/Types.sol",
        "file": "./Types.sol",
        "id": 1071,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1141,
        "sourceUnit": 1609,
        "src": "57:21:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1072,
              "name": "Types",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1608,
              "src": "113:5:5"
            },
            "id": 1073,
            "nodeType": "InheritanceSpecifier",
            "src": "113:5:5"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1140,
        "linearizedBaseContracts": [
          1140,
          1608
        ],
        "name": "CustodianWalletProxy",
        "nameLocation": "89:20:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 1074,
              "nodeType": "StructuredDocumentation",
              "src": "123:30:5",
              "text": "@notice address of factory"
            },
            "functionSelector": "c45a0155",
            "id": 1076,
            "mutability": "mutable",
            "name": "factory",
            "nameLocation": "171:7:5",
            "nodeType": "VariableDeclaration",
            "scope": 1140,
            "src": "156:22:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1075,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "156:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1077,
              "nodeType": "StructuredDocumentation",
              "src": "183:87:5",
              "text": "@notice address of wallet logic to\n copy code from and call using delegatecall"
            },
            "functionSelector": "d7dfa0dd",
            "id": 1079,
            "mutability": "immutable",
            "name": "logic",
            "nameLocation": "298:5:5",
            "nodeType": "VariableDeclaration",
            "scope": 1140,
            "src": "273:30:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1078,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "273:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1080,
              "nodeType": "StructuredDocumentation",
              "src": "308:38:5",
              "text": "@notice address of escrow contract"
            },
            "functionSelector": "9c811d43",
            "id": 1082,
            "mutability": "immutable",
            "name": "ochestrator",
            "nameLocation": "374:11:5",
            "nodeType": "VariableDeclaration",
            "scope": 1140,
            "src": "349:36:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1081,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "349:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1104,
              "nodeType": "Block",
              "src": "671:81:5",
              "statements": [
                {
                  "expression": {
                    "id": 1094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1092,
                      "name": "ochestrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1082,
                      "src": "677:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1093,
                      "name": "_ochestrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1087,
                      "src": "691:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "677:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1095,
                  "nodeType": "ExpressionStatement",
                  "src": "677:26:5"
                },
                {
                  "expression": {
                    "id": 1098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1096,
                      "name": "logic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1079,
                      "src": "709:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1097,
                      "name": "_logic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1085,
                      "src": "717:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "709:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1099,
                  "nodeType": "ExpressionStatement",
                  "src": "709:14:5"
                },
                {
                  "expression": {
                    "id": 1102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1100,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1076,
                      "src": "729:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1101,
                      "name": "_factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1089,
                      "src": "739:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "729:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1103,
                  "nodeType": "ExpressionStatement",
                  "src": "729:18:5"
                }
              ]
            },
            "documentation": {
              "id": 1083,
              "nodeType": "StructuredDocumentation",
              "src": "390:194:5",
              "text": " @param _logic address of already deployed Custodian Wallet that can receive upgrade\n @param _ochestrator address of Escrow that can has sole control over all custodian wallets"
            },
            "id": 1105,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1085,
                  "mutability": "mutable",
                  "name": "_logic",
                  "nameLocation": "612:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1105,
                  "src": "604:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1084,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "604:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1087,
                  "mutability": "mutable",
                  "name": "_ochestrator",
                  "nameLocation": "632:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1105,
                  "src": "624:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1086,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "624:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1089,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "658:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1105,
                  "src": "650:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1088,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "650:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "598:72:5"
            },
            "returnParameters": {
              "id": 1091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "671:0:5"
            },
            "scope": 1140,
            "src": "587:165:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1134,
              "nodeType": "Block",
              "src": "1600:1029:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1110,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1663:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1663:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1112,
                          "name": "ochestrator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1082,
                          "src": "1677:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1663:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57503a206465706c6f796572206f6e6c79",
                        "id": 1114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1690:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1650219b0561420e97eb6e0d17e458f704e05b07db7e70e31a383dd26ed1c9fc",
                          "typeString": "literal_string \"WP: deployer only\""
                        },
                        "value": "WP: deployer only"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1650219b0561420e97eb6e0d17e458f704e05b07db7e70e31a383dd26ed1c9fc",
                          "typeString": "literal_string \"WP: deployer only\""
                        }
                      ],
                      "id": 1109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1655:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1655:55:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1116,
                  "nodeType": "ExpressionStatement",
                  "src": "1655:55:5"
                },
                {
                  "assignments": [
                    1118
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1118,
                      "mutability": "mutable",
                      "name": "_impl",
                      "nameLocation": "1725:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1134,
                      "src": "1717:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1117,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1717:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1120,
                  "initialValue": {
                    "id": 1119,
                    "name": "logic",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1079,
                    "src": "1733:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1717:21:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1121,
                      "name": "_impl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1118,
                      "src": "1802:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1819:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1811:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1122,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1811:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1811:10:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1802:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1132,
                  "nodeType": "IfStatement",
                  "src": "1798:72:5",
                  "trueBody": {
                    "id": 1131,
                    "nodeType": "Block",
                    "src": "1823:47:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "4c6f67696320636f6e7472616374206e6f7420736574",
                              "id": 1128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1838:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3d94e7bb788358e19381856e879daa92803abde1478921ab50acbcb6d045f965",
                                "typeString": "literal_string \"Logic contract not set\""
                              },
                              "value": "Logic contract not set"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_3d94e7bb788358e19381856e879daa92803abde1478921ab50acbcb6d045f965",
                                "typeString": "literal_string \"Logic contract not set\""
                              }
                            ],
                            "id": 1127,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "1831:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 1129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1831:32:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1130,
                        "nodeType": "ExpressionStatement",
                        "src": "1831:32:5"
                      }
                    ]
                  }
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1885:740:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2163:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2166:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "2169:12:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2169:14:5"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "2150:12:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2150:34:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2150:34:5"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2293:65:5",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "2320:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2320:5:5"
                            },
                            {
                              "name": "_impl",
                              "nodeType": "YulIdentifier",
                              "src": "2327:5:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2334:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "2337:12:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2337:14:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2353:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2356:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "2307:12:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2307:51:5"
                        },
                        "variables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "2297:6:5",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2414:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2417:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "2420:14:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2420:16:5"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "2399:14:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2399:38:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2399:38:5"
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2514:45:5",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2531:1:5",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "2534:14:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2534:16:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "2524:6:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2524:27:5"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2524:27:5"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "2507:52:5",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2512:1:5",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2574:45:5",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2591:1:5",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "2594:14:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2594:16:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "return",
                                      "nodeType": "YulIdentifier",
                                      "src": "2584:6:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2584:27:5"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2584:27:5"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "2566:53:5",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "name": "result",
                          "nodeType": "YulIdentifier",
                          "src": "2452:6:5"
                        },
                        "nodeType": "YulSwitch",
                        "src": "2445:174:5"
                      }
                    ]
                  },
                  "evmVersion": "byzantium",
                  "externalReferences": [
                    {
                      "declaration": 1118,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2327:5:5",
                      "valueSize": 1
                    }
                  ],
                  "id": 1133,
                  "nodeType": "InlineAssembly",
                  "src": "1876:749:5"
                }
              ]
            },
            "documentation": {
              "id": 1106,
              "nodeType": "StructuredDocumentation",
              "src": "777:792:5",
              "text": " @dev Forward any call to any function with any set of parameters to the logic contract\n without it needing to know anything in particular of the logic contract’s interface.\n Note By using this proxy approach we are able to upgrade the logic contract at any time and allow\n already deployed proxy wallets benefit from new updates.\n Since msg.sender when calling Wallet Logic chnages to address(this) due to usage of delegate call\n we are unable to determinable set a modifier on functions in Wallet Logic to limit calls to Escrow.\n So we require that caller to all wallet proxies to call our wallet logic can only be escrow.\n Credit to https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol"
            },
            "id": 1135,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1580:2:5"
            },
            "returnParameters": {
              "id": 1108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1600:0:5"
            },
            "scope": 1140,
            "src": "1572:1057:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1138,
              "nodeType": "Block",
              "src": "2693:2:5",
              "statements": []
            },
            "id": 1139,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2673:2:5"
            },
            "returnParameters": {
              "id": 1137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2693:0:5"
            },
            "scope": 1140,
            "src": "2666:29:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1141,
        "src": "80:2657:5",
        "usedErrors": []
      }
    ],
    "src": "32:2706:5"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/CustodianWalletProxy.sol",
    "exportedSymbols": {
      "CustodianWalletProxy": [
        1140
      ],
      "Types": [
        1608
      ]
    },
    "id": 1141,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1070,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:5"
      },
      {
        "absolutePath": "project:/contracts/Types.sol",
        "file": "./Types.sol",
        "id": 1071,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1141,
        "sourceUnit": 1609,
        "src": "57:21:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1072,
              "name": "Types",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1608,
              "src": "113:5:5"
            },
            "id": 1073,
            "nodeType": "InheritanceSpecifier",
            "src": "113:5:5"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1140,
        "linearizedBaseContracts": [
          1140,
          1608
        ],
        "name": "CustodianWalletProxy",
        "nameLocation": "89:20:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 1074,
              "nodeType": "StructuredDocumentation",
              "src": "123:30:5",
              "text": "@notice address of factory"
            },
            "functionSelector": "c45a0155",
            "id": 1076,
            "mutability": "mutable",
            "name": "factory",
            "nameLocation": "171:7:5",
            "nodeType": "VariableDeclaration",
            "scope": 1140,
            "src": "156:22:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1075,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "156:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1077,
              "nodeType": "StructuredDocumentation",
              "src": "183:87:5",
              "text": "@notice address of wallet logic to\n copy code from and call using delegatecall"
            },
            "functionSelector": "d7dfa0dd",
            "id": 1079,
            "mutability": "immutable",
            "name": "logic",
            "nameLocation": "298:5:5",
            "nodeType": "VariableDeclaration",
            "scope": 1140,
            "src": "273:30:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1078,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "273:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1080,
              "nodeType": "StructuredDocumentation",
              "src": "308:38:5",
              "text": "@notice address of escrow contract"
            },
            "functionSelector": "9c811d43",
            "id": 1082,
            "mutability": "immutable",
            "name": "ochestrator",
            "nameLocation": "374:11:5",
            "nodeType": "VariableDeclaration",
            "scope": 1140,
            "src": "349:36:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1081,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "349:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1104,
              "nodeType": "Block",
              "src": "671:81:5",
              "statements": [
                {
                  "expression": {
                    "id": 1094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1092,
                      "name": "ochestrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1082,
                      "src": "677:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1093,
                      "name": "_ochestrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1087,
                      "src": "691:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "677:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1095,
                  "nodeType": "ExpressionStatement",
                  "src": "677:26:5"
                },
                {
                  "expression": {
                    "id": 1098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1096,
                      "name": "logic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1079,
                      "src": "709:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1097,
                      "name": "_logic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1085,
                      "src": "717:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "709:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1099,
                  "nodeType": "ExpressionStatement",
                  "src": "709:14:5"
                },
                {
                  "expression": {
                    "id": 1102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1100,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1076,
                      "src": "729:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1101,
                      "name": "_factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1089,
                      "src": "739:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "729:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1103,
                  "nodeType": "ExpressionStatement",
                  "src": "729:18:5"
                }
              ]
            },
            "documentation": {
              "id": 1083,
              "nodeType": "StructuredDocumentation",
              "src": "390:194:5",
              "text": " @param _logic address of already deployed Custodian Wallet that can receive upgrade\n @param _ochestrator address of Escrow that can has sole control over all custodian wallets"
            },
            "id": 1105,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1085,
                  "mutability": "mutable",
                  "name": "_logic",
                  "nameLocation": "612:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1105,
                  "src": "604:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1084,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "604:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1087,
                  "mutability": "mutable",
                  "name": "_ochestrator",
                  "nameLocation": "632:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1105,
                  "src": "624:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1086,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "624:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1089,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "658:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1105,
                  "src": "650:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1088,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "650:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "598:72:5"
            },
            "returnParameters": {
              "id": 1091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "671:0:5"
            },
            "scope": 1140,
            "src": "587:165:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1134,
              "nodeType": "Block",
              "src": "1600:1029:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1110,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1663:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1663:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1112,
                          "name": "ochestrator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1082,
                          "src": "1677:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1663:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57503a206465706c6f796572206f6e6c79",
                        "id": 1114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1690:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1650219b0561420e97eb6e0d17e458f704e05b07db7e70e31a383dd26ed1c9fc",
                          "typeString": "literal_string \"WP: deployer only\""
                        },
                        "value": "WP: deployer only"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1650219b0561420e97eb6e0d17e458f704e05b07db7e70e31a383dd26ed1c9fc",
                          "typeString": "literal_string \"WP: deployer only\""
                        }
                      ],
                      "id": 1109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1655:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1655:55:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1116,
                  "nodeType": "ExpressionStatement",
                  "src": "1655:55:5"
                },
                {
                  "assignments": [
                    1118
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1118,
                      "mutability": "mutable",
                      "name": "_impl",
                      "nameLocation": "1725:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1134,
                      "src": "1717:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1117,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1717:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1120,
                  "initialValue": {
                    "id": 1119,
                    "name": "logic",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1079,
                    "src": "1733:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1717:21:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1121,
                      "name": "_impl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1118,
                      "src": "1802:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1819:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1811:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1122,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1811:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1811:10:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1802:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1132,
                  "nodeType": "IfStatement",
                  "src": "1798:72:5",
                  "trueBody": {
                    "id": 1131,
                    "nodeType": "Block",
                    "src": "1823:47:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "4c6f67696320636f6e7472616374206e6f7420736574",
                              "id": 1128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1838:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3d94e7bb788358e19381856e879daa92803abde1478921ab50acbcb6d045f965",
                                "typeString": "literal_string \"Logic contract not set\""
                              },
                              "value": "Logic contract not set"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_3d94e7bb788358e19381856e879daa92803abde1478921ab50acbcb6d045f965",
                                "typeString": "literal_string \"Logic contract not set\""
                              }
                            ],
                            "id": 1127,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "1831:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 1129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1831:32:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1130,
                        "nodeType": "ExpressionStatement",
                        "src": "1831:32:5"
                      }
                    ]
                  }
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1885:740:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2163:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2166:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "2169:12:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2169:14:5"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "2150:12:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2150:34:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2150:34:5"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2293:65:5",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "2320:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2320:5:5"
                            },
                            {
                              "name": "_impl",
                              "nodeType": "YulIdentifier",
                              "src": "2327:5:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2334:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "2337:12:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2337:14:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2353:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2356:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "2307:12:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2307:51:5"
                        },
                        "variables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "2297:6:5",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2414:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2417:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "2420:14:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2420:16:5"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "2399:14:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2399:38:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2399:38:5"
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2514:45:5",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2531:1:5",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "2534:14:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2534:16:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "2524:6:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2524:27:5"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2524:27:5"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "2507:52:5",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2512:1:5",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2574:45:5",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2591:1:5",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "2594:14:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2594:16:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "return",
                                      "nodeType": "YulIdentifier",
                                      "src": "2584:6:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2584:27:5"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2584:27:5"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "2566:53:5",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "name": "result",
                          "nodeType": "YulIdentifier",
                          "src": "2452:6:5"
                        },
                        "nodeType": "YulSwitch",
                        "src": "2445:174:5"
                      }
                    ]
                  },
                  "evmVersion": "byzantium",
                  "externalReferences": [
                    {
                      "declaration": 1118,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2327:5:5",
                      "valueSize": 1
                    }
                  ],
                  "id": 1133,
                  "nodeType": "InlineAssembly",
                  "src": "1876:749:5"
                }
              ]
            },
            "documentation": {
              "id": 1106,
              "nodeType": "StructuredDocumentation",
              "src": "777:792:5",
              "text": " @dev Forward any call to any function with any set of parameters to the logic contract\n without it needing to know anything in particular of the logic contract’s interface.\n Note By using this proxy approach we are able to upgrade the logic contract at any time and allow\n already deployed proxy wallets benefit from new updates.\n Since msg.sender when calling Wallet Logic chnages to address(this) due to usage of delegate call\n we are unable to determinable set a modifier on functions in Wallet Logic to limit calls to Escrow.\n So we require that caller to all wallet proxies to call our wallet logic can only be escrow.\n Credit to https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/Proxy.sol"
            },
            "id": 1135,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1580:2:5"
            },
            "returnParameters": {
              "id": 1108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1600:0:5"
            },
            "scope": 1140,
            "src": "1572:1057:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1138,
              "nodeType": "Block",
              "src": "2693:2:5",
              "statements": []
            },
            "id": 1139,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2673:2:5"
            },
            "returnParameters": {
              "id": 1137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2693:0:5"
            },
            "scope": 1140,
            "src": "2666:29:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1141,
        "src": "80:2657:5",
        "usedErrors": []
      }
    ],
    "src": "32:2706:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-05-02T11:17:08.773Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_logic": "address of already deployed Custodian Wallet that can receive upgrade",
          "_ochestrator": "address of Escrow that can has sole control over all custodian wallets"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "factory()": {
        "notice": "address of factory"
      },
      "logic()": {
        "notice": "address of wallet logic to copy code from and call using delegatecall"
      },
      "ochestrator()": {
        "notice": "address of escrow contract"
      }
    },
    "version": 1
  }
}